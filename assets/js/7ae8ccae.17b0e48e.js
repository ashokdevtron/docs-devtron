"use strict";(self.webpackChunkdocdevtron=self.webpackChunkdocdevtron||[]).push([[1936],{6586:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"user-guide/creating-application/base-config/deployment-template/statefulset","title":"StatefulSet","description":"The StatefulSet chart in Devtron allows you to deploy and manage stateful applications. StatefulSet is a Kubernetes resource that provides guarantees about the ordering and uniqueness of Pods during deployment and scaling.","source":"@site/docs/user-guide/creating-application/base-config/deployment-template/statefulset.md","sourceDirName":"user-guide/creating-application/base-config/deployment-template","slug":"/user-guide/creating-application/base-config/deployment-template/statefulset","permalink":"/docs-devtron/docs/user-guide/creating-application/base-config/deployment-template/statefulset","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Job and CronJob","permalink":"/docs-devtron/docs/user-guide/creating-application/base-config/deployment-template/job-and-cronjob"},"next":{"title":"Types of External Secrets","permalink":"/docs-devtron/docs/user-guide/creating-application/base-config/eso/"}}');var i=n(4848),l=n(8453);const r={},a="StatefulSet",d={},o=[{value:"1. Yaml File",id:"1-yaml-file",level:2},{value:"Container Ports",id:"container-ports",level:3},{value:"EnvVariables",id:"envvariables",level:3},{value:"EnvVariablesFromSecretKeys",id:"envvariablesfromsecretkeys",level:3},{value:"EnvVariablesFromConfigMapKeys",id:"envvariablesfromconfigmapkeys",level:3},{value:"StatefulSetConfig",id:"statefulsetconfig",level:3},{value:"Liveness Probe",id:"liveness-probe",level:3},{value:"MaxUnavailable",id:"maxunavailable",level:3},{value:"MaxSurge",id:"maxsurge",level:3},{value:"Min Ready Seconds",id:"min-ready-seconds",level:3},{value:"Readiness Probe",id:"readiness-probe",level:3},{value:"Ambassador Mappings",id:"ambassador-mappings",level:3},{value:"Autoscaling",id:"autoscaling",level:3},{value:"Fullname Override",id:"fullname-override",level:3},{value:"Image",id:"image",level:3},{value:"imagePullSecrets",id:"imagepullsecrets",level:3},{value:"Ingress",id:"ingress",level:3},{value:"Ingress Internal",id:"ingress-internal",level:3},{value:"Init Containers",id:"init-containers",level:3},{value:"Istio",id:"istio",level:3},{value:"Pause For Seconds Before Switch Active",id:"pause-for-seconds-before-switch-active",level:3},{value:"Resources",id:"resources",level:3},{value:"Limits",id:"limits",level:4},{value:"Requests",id:"requests",level:4},{value:"Service",id:"service",level:3},{value:"Volumes",id:"volumes",level:3},{value:"Volume Mounts",id:"volume-mounts",level:3},{value:"Affinity and anti-affinity",id:"affinity-and-anti-affinity",level:3},{value:"Key",id:"key",level:4},{value:"Values",id:"values",level:4},{value:"Tolerations",id:"tolerations",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Command",id:"command",level:3},{value:"Containers",id:"containers",level:3},{value:"Prometheus",id:"prometheus",level:3},{value:"rawYaml",id:"rawyaml",level:3},{value:"Grace Period",id:"grace-period",level:3},{value:"Server",id:"server",level:3},{value:"Deployment",id:"deployment",level:4},{value:"Service Monitor",id:"service-monitor",level:3},{value:"Db Migration Config",id:"db-migration-config",level:3},{value:"KEDA Autoscaling",id:"keda-autoscaling",level:3},{value:"Winter-Soldier",id:"winter-soldier",level:3},{value:"Security Context",id:"security-context",level:3},{value:"Topology Spread Constraints",id:"topology-spread-constraints",level:3},{value:"Deployment Metrics",id:"deployment-metrics",level:3},{value:"2. Show application metrics",id:"2-show-application-metrics",level:2},{value:"Helm Chart Json Schema",id:"helm-chart-json-schema",level:3},{value:"Other Validations in Json Schema",id:"other-validations-in-json-schema",level:3}];function c(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"statefulset",children:"StatefulSet"})}),"\n",(0,i.jsx)(t.p,{children:"The StatefulSet chart in Devtron allows you to deploy and manage stateful applications. StatefulSet is a Kubernetes resource that provides guarantees about the ordering and uniqueness of Pods during deployment and scaling."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/deployment-template/sts-chart.jpg",alt:"Figure 1: Choosing 'StatefulSet' Chart"})}),"\n",(0,i.jsxs)(t.p,{children:["It supports only ",(0,i.jsx)(t.code,{children:"ONDELETE"})," and ",(0,i.jsx)(t.code,{children:"ROLLINGUPDATE"})," deployment strategy."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/deployment-template/sts-strategy.jpg",alt:"Figure 2: Selecting Deployment Strategy"})}),"\n",(0,i.jsxs)(t.p,{children:["You can select ",(0,i.jsx)(t.code,{children:"StatefulSet"})," chart when you want to use only basic use cases which contain the following:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Managing Stateful Applications:"})," StatefulSets are ideal for managing stateful applications, such as databases or distributed systems, that require stable network identities and persistent storage for each Pod."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Ordered Pod Management:"})," StatefulSets ensure ordered and predictable management of Pods by providing each Pod with a unique and stable hostname based on a defined naming convention and ordinal index."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Updating and Scaling Stateful Applications:"})," StatefulSets support updating and scaling stateful applications by creating new versions of the StatefulSet and performing rolling updates or scaling operations in a controlled manner, ensuring minimal disruption to the application."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Persistent Storage:"})," StatefulSets have built-in mechanisms for handling persistent volumes, allowing each Pod to have its own unique volume claim and storage. This ensures data persistence even when Pods are rescheduled or restarted."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Maintaining Pod Identity:"})," StatefulSets guarantee consistent identity for each Pod throughout its lifecycle. This stability is maintained even if the Pods are rescheduled, allowing applications to rely on stable network identities."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Rollback Capability:"})," StatefulSets provide the ability to rollback to a previous version in case the current state of the application is unstable or encounters issues, ensuring a known working state for the application."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Status Monitoring:"})," StatefulSets offer status information that can be used to monitor the deployment, including the current version, number of replicas, and the readiness of each Pod. This helps in tracking the health and progress of the StatefulSet deployment."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Resource Cleanup:"})," StatefulSets allow for easy cleanup of older versions by deleting StatefulSets and their associated Pods and persistent volumes that are no longer needed, ensuring efficient resource utilization."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{title:"Note",type:"caution",children:(0,i.jsxs)(t.p,{children:["Super-admins can lock keys in StatefulSet deployment template to prevent non-super-admins from modifying those locked keys. Refer ",(0,i.jsx)(t.a,{href:"/docs-devtron/docs/user-guide/global-configurations/lock-deployment-config",children:"Lock Deployment Configuration"})," to know more."]})}),"\n",(0,i.jsx)(t.h2,{id:"1-yaml-file",children:"1. Yaml File"}),"\n",(0,i.jsx)(t.h3,{id:"container-ports",children:"Container Ports"}),"\n",(0,i.jsx)(t.p,{children:"This defines ports on which application services will be exposed to other services"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"ContainerPort:\n  - envoyPort: 8799\n    idleTimeout:\n    name: app\n    port: 8080\n    servicePort: 80\n    nodePort: 32056\n    supportStreaming: true\n    useHTTP2: true\n"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"envoyPort"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"envoy port for the container."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"idleTimeout"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"the duration of time that a connection is idle before the connection is terminated."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"name"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"name of the port."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"port"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"port for the container."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"servicePort"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"port of the corresponding kubernetes service."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"nodePort"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"nodeport of the corresponding kubernetes service."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"supportStreaming"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Used for high performance protocols like grpc where timeout needs to be disabled."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"useHTTP2"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Envoy container can accept HTTP2 requests."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"envvariables",children:"EnvVariables"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"EnvVariables: []\n"})}),"\n",(0,i.jsx)(t.h3,{id:"envvariablesfromsecretkeys",children:"EnvVariablesFromSecretKeys"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"EnvVariablesFromSecretKeys: \n  - name: ENV_NAME\n    secretName: SECRET_NAME\n    keyName: SECRET_KEY\n\n"})}),"\n",(0,i.jsx)(t.p,{children:"It is used to get the name of Environment Variable name, Secret name and the Key name from which we are using the value in that corresponding Environment Variable."}),"\n",(0,i.jsx)(t.h3,{id:"envvariablesfromconfigmapkeys",children:"EnvVariablesFromConfigMapKeys"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"EnvVariablesFromConfigMapKeys: \n  - name: ENV_NAME\n    configMapName: CONFIG_MAP_NAME\n    keyName: CONFIG_MAP_KEY\n\n"})}),"\n",(0,i.jsx)(t.p,{children:"It is used to get the name of Environment Variable name, Config Map name and the Key name from which we are using the value in that corresponding Environment Variable."}),"\n",(0,i.jsx)(t.p,{children:"To set environment variables for the containers that run in the Pod."}),"\n",(0,i.jsx)(t.h3,{id:"statefulsetconfig",children:"StatefulSetConfig"}),"\n",(0,i.jsx)(t.p,{children:"These are  all the configuration settings for the StatefulSet."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'statefulSetConfig:\n  labels:\n    app: my-statefulset\n    environment: production\n  annotations:\n    example.com/version: "1.0"\n  serviceName: "my-statefulset-service"\n  podManagementPolicy: "Parallel"\n  revisionHistoryLimit: 5\n  mountPath: "/data"\n  volumeClaimTemplates:\n    - apiVersion: v1\n      kind: PersistentVolumeClaim\n      metadata:\n        labels:\n          app: my-statefulset\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        dataSource:\n          kind: Snapshot\n          apiGroup: snapshot.storage.k8s.io\n          name: my-snapshot\n        resources:\n          requests:\n            storage: 5Gi\n          limits:\n            storage: 10Gi\n        storageClassName: my-storage-class\n        selector:\n          matchLabels:\n            app: my-statefulset\n        volumeMode: Filesystem\n        volumeName: my-pv\n  - apiVersion: v1\n    kind: PersistentVolumeClaim\n    metadata:\n      name: pvc-logs\n      labels:\n        app: myapp\n    spec:\n      accessModes:\n        - ReadWriteMany\n      dataSourceRef:\n        kind: Secret\n        apiGroup: v1\n        name: my-secret\n      resources:\n        requests:\n          storage: 5Gi\n      storageClassName: my-storage-class\n      selector:\n        matchExpressions:\n          - {key: environment, operator: In, values: [production]}\n      volumeMode: Block\n      volumeName: my-pv\n\n'})}),"\n",(0,i.jsx)(t.p,{children:"Mandatoryfields in statefulSetConfig is"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"statefulSetConfig:\n  mountPath: /tmp\n  volumeClaimTemplates:\n  - spec:\n      accessModes: \n        - ReadWriteOnce\n      resources: \n        requests:\n            storage: 2Gi\n"})}),"\n",(0,i.jsx)(t.p,{children:"Here is an explanation of each field in the statefulSetConfig :"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"labels"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"set of key-value pairs used to identify the StatefulSet ."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"annotations"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"A map of key-value pairs that are attached to the stateful set as metadata."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"serviceName"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The name of the Kubernetes Service that the StatefulSet should create."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"podManagementPolicy"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:'A policy that determines how Pods are created and deleted by the StatefulSet. In this case, the policy is set to "Parallel", which means that all Pods are created at once.'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"revisionHistoryLimit"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The number of revisions that should be stored for each replica of the StatefulSet."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"updateStrategy"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The update strategy used by the StatefulSet when rolling out changes."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"mountPath"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The path where the volume should be mounted in the container."})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"volumeClaimTemplates: An array of volume claim templates that are used to create persistent volumes for the StatefulSet. Each volume claim template specifies the storage class, access mode, storage size, and other details of the persistent volume."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"apiVersion"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The API version of the PVC ."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"kind"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The type of object that the PVC is."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"metadata"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Metadata that is attached to the resource being created."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"labels"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"A set of key-value pairs used to label the object for identification and selection."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"spec"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The specification of the object, which defines its desired state and behavior."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"accessModes"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:'A list of access modes for the PersistentVolumeClaim, such as "ReadWriteOnce" or "ReadWriteMany".'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"dataSource"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"A data source used to populate the PersistentVolumeClaim, such as a Snapshot or a StorageClass."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"kind"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"specifies the kind of the snapshot, in this case Snapshot."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"apiGroup"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"specifies the API group of the snapshot API, in this case snapshot.storage.k8s.io."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"name"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"specifies the name of the snapshot, in this case my-snapshot."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"dataSourceRef"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"A  reference to a data source used to create the persistent volume. In this case, it's a secret."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"updateStrategy"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The update strategy used by the StatefulSet when rolling out changes."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"resources"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The resource requests and limits for the PersistentVolumeClaim, which define the minimum and maximum amount of storage it can use."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"requests"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The amount of storage requested by the PersistentVolumeClaim."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"limits"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The maximum amount of storage that the PersistentVolumeClaim can use."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"storageClassName"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The name of the storage class to use for the persistent volume."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"selector"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The selector used to match a persistent volume to a persistent volume claim."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"matchLabels"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"a map of key-value pairs to match the labels of the corresponding PersistentVolume."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"matchExpressions"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"A set of requirements that the selected object must meet to be considered a match."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"key"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The key of the label or annotation to match."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"operator"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:'The operator used to compare the key-value pairs (in this case, "In" specifies a set membership test).'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"values"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"A list of values that the selected object's label or annotation must match."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"volumeMode"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:'The mode of the volume, either "Filesystem" or "Block".'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"volumeName"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The name of the PersistentVolume that is created for the PersistentVolumeClaim."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"liveness-probe",children:"Liveness Probe"}),"\n",(0,i.jsx)(t.p,{children:"If this check fails, kubernetes restarts the pod. This should return error code in case of non-recoverable error."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'LivenessProbe:\n  Path: ""\n  port: 8080\n  initialDelaySeconds: 20\n  periodSeconds: 10\n  successThreshold: 1\n  timeoutSeconds: 5\n  failureThreshold: 3\n  httpHeaders:\n    - name: Custom-Header\n      value: abc\n  scheme: ""\n  tcp: true\n'})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"Path"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It define the path where the liveness needs to be checked."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"initialDelaySeconds"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It defines the time to wait before a given container is checked for liveliness."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"periodSeconds"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It defines the time to check a given container for liveness."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"successThreshold"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It defines the number of successes required before a given container is said to fulfil the liveness probe."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"timeoutSeconds"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It defines the time for checking timeout."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"failureThreshold"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It defines the maximum number of failures that are acceptable before a given container is not considered as live."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"httpHeaders"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Custom headers to set in the request. HTTP allows repeated headers,You can override the default headers by defining .httpHeaders for the probe."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"scheme"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Scheme to use for connecting to the host (HTTP or HTTPS). Defaults to HTTP."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"tcp"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The kubelet will attempt to open a socket to your container on the specified port. If it can establish a connection, the container is considered healthy."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"maxunavailable",children:"MaxUnavailable"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"  MaxUnavailable: 0\n"})}),"\n",(0,i.jsx)(t.p,{children:'The maximum number of pods that can be unavailable during the update process. The value of "MaxUnavailable: " can be an absolute number or percentage of the replicas count. The default value of "MaxUnavailable: " is 25%.'}),"\n",(0,i.jsx)(t.h3,{id:"maxsurge",children:"MaxSurge"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"MaxSurge: 1\n"})}),"\n",(0,i.jsx)(t.p,{children:'The maximum number of pods that can be created over the desired number of pods. For "MaxSurge: " also, the value can be an absolute number or percentage of the replicas count.\nThe default value of "MaxSurge: " is 25%.'}),"\n",(0,i.jsx)(t.h3,{id:"min-ready-seconds",children:"Min Ready Seconds"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"MinReadySeconds: 60\n"})}),"\n",(0,i.jsx)(t.p,{children:"This specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing, for it to be considered available. This defaults to 0 (the Pod will be considered available as soon as it is ready)."}),"\n",(0,i.jsx)(t.h3,{id:"readiness-probe",children:"Readiness Probe"}),"\n",(0,i.jsx)(t.p,{children:"If this check fails, kubernetes stops sending traffic to the application. This should return error code in case of errors which can be recovered from if traffic is stopped."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'ReadinessProbe:\n  Path: ""\n  port: 8080\n  initialDelaySeconds: 20\n  periodSeconds: 10\n  successThreshold: 1\n  timeoutSeconds: 5\n  failureThreshold: 3\n  httpHeaders:\n    - name: Custom-Header\n      value: abc\n  scheme: ""\n  tcp: true\n'})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"Path"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It define the path where the readiness needs to be checked."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"initialDelaySeconds"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It defines the time to wait before a given container is checked for readiness."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"periodSeconds"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It defines the time to check a given container for readiness."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"successThreshold"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It defines the number of successes required before a given container is said to fulfill the readiness probe."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"timeoutSeconds"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It defines the time for checking timeout."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"failureThreshold"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It defines the maximum number of failures that are acceptable before a given container is not considered as ready."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"httpHeaders"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Custom headers to set in the request. HTTP allows repeated headers,You can override the default headers by defining .httpHeaders for the probe."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"scheme"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Scheme to use for connecting to the host (HTTP or HTTPS). Defaults to HTTP."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"tcp"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The kubelet will attempt to open a socket to your container on the specified port. If it can establish a connection, the container is considered healthy."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"ambassador-mappings",children:"Ambassador Mappings"}),"\n",(0,i.jsx)(t.p,{children:"You can create ambassador mappings to access your applications from outside the cluster. At its core a Mapping resource maps a resource to a service."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'ambassadorMapping:\n  ambassadorId: "prod-emissary"\n  cors: {}\n  enabled: true\n  hostname: devtron.example.com\n  labels: {}\n  prefix: /\n  retryPolicy: {}\n  rewrite: ""\n  tls:\n    context: "devtron-tls-context"\n    create: false\n    hosts: []\n    secretName: ""\n'})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"enabled"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Set true to enable ambassador mapping else set false."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"ambassadorId"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"used to specify id for specific ambassador mappings controller."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"cors"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"used to specify cors policy to access host for this mapping."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"weight"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"used to specify weight for canary ambassador mappings."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"hostname"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"used to specify hostname for ambassador mapping."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"prefix"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"used to specify path for ambassador mapping."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"labels"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"used to provide custom labels for ambassador mapping."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"retryPolicy"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"used to specify retry policy for ambassador mapping."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"corsPolicy"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Provide cors headers on flagger resource."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"rewrite"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"used to specify whether to redirect the path of this mapping and where."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"tls"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"used to create or define ambassador TLSContext resource."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"extraSpec"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"used to provide extra spec values which not present in deployment template for ambassador resource."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"autoscaling",children:"Autoscaling"}),"\n",(0,i.jsx)(t.p,{children:"This is connected to HPA and controls scaling up and down in response to request load."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"autoscaling:\n  enabled: false\n  MinReplicas: 1\n  MaxReplicas: 2\n  TargetCPUUtilizationPercentage: 90\n  TargetMemoryUtilizationPercentage: 80\n  extraMetrics: []\n"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"enabled"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Set true to enable autoscaling else set false."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"MinReplicas"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Minimum number of replicas allowed for scaling."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"MaxReplicas"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Maximum number of replicas allowed for scaling."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"TargetCPUUtilizationPercentage"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The target CPU utilization that is expected for a container."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"TargetMemoryUtilizationPercentage"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The target memory utilization that is expected for a container."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"extraMetrics"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Used to give external metrics for autoscaling."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"fullname-override",children:"Fullname Override"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"fullnameOverride: app-name\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"fullnameOverride"})," replaces the release fullname created by default by devtron, which is used to construct Kubernetes object names. By default, devtron uses ",(0,i.jsx)(t.code,{children:"{app-name}-{environment-name}"})," as release fullname."]}),"\n",(0,i.jsx)(t.h3,{id:"image",children:"Image"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"image:\n  pullPolicy: IfNotPresent\n"})}),"\n",(0,i.jsx)(t.p,{children:'Image is used to access images in kubernetes, pullpolicy is used to define the instances calling the image, here the image is pulled when the image is not present,it can also be set as "Always".'}),"\n",(0,i.jsx)(t.h3,{id:"imagepullsecrets",children:"imagePullSecrets"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"imagePullSecrets"})," contains the docker credentials that are used for accessing a registry."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"imagePullSecrets:\n  - regcred\n"})}),"\n",(0,i.jsxs)(t.p,{children:["regcred is the secret that contains the docker credentials that are used for accessing a registry. Devtron will not create this secret automatically, you'll have to create this secret using dt-secrets helm chart in the App store or create one using kubectl. You can follow this documentation Pull an Image from a Private Registry ",(0,i.jsx)(t.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",children:"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/"})," ."]}),"\n",(0,i.jsx)(t.h3,{id:"ingress",children:"Ingress"}),"\n",(0,i.jsx)(t.p,{children:"This allows public access to the url, please ensure you are using right nginx annotation for nginx class, its default value is nginx"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"ingress:\n  enabled: false\n  # For K8s 1.19 and above use ingressClassName instead of annotation kubernetes.io/ingress.class:\n  className: nginx\n  annotations: {}\n  hosts:\n      - host: example1.com\n        paths:\n            - /example\n      - host: example2.com\n        paths:\n            - /example2\n            - /example2/healthz\n  tls: []\n"})}),"\n",(0,i.jsx)(t.p,{children:"Legacy deployment-template ingress format"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'ingress:\n  enabled: false\n  # For K8s 1.19 and above use ingressClassName instead of annotation kubernetes.io/ingress.class:\n  ingressClassName: nginx-internal\n  annotations: {}\n  path: ""\n  host: ""\n  tls: []\n'})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"enabled"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Enable or disable ingress"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"annotations"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"To configure some options depending on the Ingress controller"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"path"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Path name"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"host"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Host name"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"tls"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It contains security details"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"ingress-internal",children:"Ingress Internal"}),"\n",(0,i.jsx)(t.p,{children:"This allows private access to the url, please ensure you are using right nginx annotation for nginx class, its default value is nginx"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"ingressInternal:\n  enabled: false\n  # For K8s 1.19 and above use ingressClassName instead of annotation kubernetes.io/ingress.class:\n  ingressClassName: nginx-internal\n  annotations: {}\n  hosts:\n      - host: example1.com\n        paths:\n            - /example\n      - host: example2.com\n        paths:\n            - /example2\n            - /example2/healthz\n  tls: []\n"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"enabled"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Enable or disable ingress"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"annotations"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"To configure some options depending on the Ingress controller"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"path"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Path name"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"host"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Host name"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"tls"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It contains security details"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"init-containers",children:"Init Containers"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'initContainers: \n  - reuseContainerImage: true\n    securityContext:\n      runAsUser: 1000\n      runAsGroup: 3000\n      fsGroup: 2000\n    volumeMounts:\n     - mountPath: /etc/ls-oms\n       name: ls-oms-cm-vol\n   command:\n     - flyway\n     - -configFiles=/etc/ls-oms/flyway.conf\n     - migrate\n\n  - name: nginx\n    image: nginx:1.14.2\n    securityContext:\n      privileged: true\n    ports:\n    - containerPort: 80\n    command: ["/usr/local/bin/nginx"]\n    args: ["-g", "daemon off;"]\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Specialized containers that run before app containers in a Pod. Init containers can contain utilities or setup scripts not present in an app image. One can use base image inside initContainer by setting the reuseContainerImage flag to ",(0,i.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"istio",children:"Istio"}),"\n",(0,i.jsx)(t.p,{children:"Istio is a service mesh which simplifies observability, traffic management, security and much more with it's virtual services and gateways."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"istio:\n  enable: true\n  gateway:\n    annotations: {}\n    enabled: false\n    host: example.com\n    labels: {}\n    tls:\n      enabled: false\n      secretName: example-tls-secret\n  virtualService:\n    annotations: {}\n    enabled: false\n    gateways: []\n    hosts: []\n    http:\n      - corsPolicy:\n          allowCredentials: false\n          allowHeaders:\n            - x-some-header\n          allowMethods:\n            - GET\n          allowOrigin:\n            - example.com\n          maxAge: 24h\n        headers:\n          request:\n            add:\n              x-some-header: value\n        match:\n          - uri:\n              prefix: /v1\n          - uri:\n              prefix: /v2\n        retries:\n          attempts: 2\n          perTryTimeout: 3s\n        rewriteUri: /\n        route:\n          - destination:\n              host: service1\n              port: 80\n        timeout: 12s\n      - route:\n          - destination:\n              host: service2\n    labels: {}\n"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"istio"})}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Istio enablement. When ",(0,i.jsx)(t.code,{children:"istio.enable"})," set to true, Istio would be enabled for the specified configurations"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"gateway"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Allowing external traffic to enter the service mesh through the specified configurations."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"host"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The external domain through which traffic will be routed into the service mesh."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"tls"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Traffic to and from the gateway should be encrypted using TLS."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"secretName"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Specifies the name of the Kubernetes secret that contains the TLS certificate and private key. The TLS certificate is used for securing the communication between clients and the Istio gateway."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"virtualService"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Enables the definition of rules for how traffic should be routed to different services within the service mesh."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"gateways"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Specifies the gateways to which the rules defined in the VirtualService apply."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"hosts"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"List of hosts (domains) to which this VirtualService is applied."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"http"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Configuration for HTTP routes within the VirtualService. It define routing rules based on HTTP attributes such as URI prefixes, headers, timeouts, and retry policies."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"corsPolicy"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Cross-Origin Resource Sharing (CORS) policy configuration."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"headers"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Additional headers to be added to the HTTP request."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"match"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Conditions that need to be satisfied for this route to be used."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"uri"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"This specifies a match condition based on the URI of the incoming request."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"prefix"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It specifies that the URI should have the specified prefix."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"retries"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Retry configuration for failed requests."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"attempts"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It specifies the number of retry attempts for failed requests."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"perTryTimeout"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"sets the timeout for each individual retry attempt."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"rewriteUri"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Rewrites the URI of the incoming request."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"route"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"List of destination rules for routing traffic."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"pause-for-seconds-before-switch-active",children:"Pause For Seconds Before Switch Active"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"pauseForSecondsBeforeSwitchActive: 30\n"})}),"\n",(0,i.jsx)(t.p,{children:"To wait for given period of time before switch active the container."}),"\n",(0,i.jsx)(t.h3,{id:"resources",children:"Resources"}),"\n",(0,i.jsx)(t.p,{children:"These define minimum and maximum RAM and CPU available to the application."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'resources:\n  limits:\n    cpu: "1"\n    memory: "200Mi"\n  requests:\n    cpu: "0.10"\n    memory: "100Mi"\n'})}),"\n",(0,i.jsx)(t.p,{children:"Resources are required to set CPU and memory usage."}),"\n",(0,i.jsx)(t.h4,{id:"limits",children:"Limits"}),"\n",(0,i.jsx)(t.p,{children:"Limits make sure a container never goes above a certain value. The container is only allowed to go up to the limit, and then it is restricted."}),"\n",(0,i.jsx)(t.h4,{id:"requests",children:"Requests"}),"\n",(0,i.jsx)(t.p,{children:"Requests are what the container is guaranteed to get."}),"\n",(0,i.jsx)(t.h3,{id:"service",children:"Service"}),"\n",(0,i.jsx)(t.p,{children:"This defines annotations and the type of service, optionally can define name also."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"  service:\n    type: ClusterIP\n    annotations: {}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"volumes",children:"Volumes"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"volumes:\n  - name: log-volume\n    emptyDir: {}\n  - name: logpv\n    persistentVolumeClaim:\n      claimName: logpvc\n"})}),"\n",(0,i.jsx)(t.p,{children:"It is required when some values need to be read from or written to an external disk."}),"\n",(0,i.jsx)(t.h3,{id:"volume-mounts",children:"Volume Mounts"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"volumeMounts:\n  - mountPath: /var/log/nginx/\n    name: log-volume \n  - mountPath: /mnt/logs\n    name: logpvc\n    subPath: employee  \n"})}),"\n",(0,i.jsx)(t.p,{children:"It is used to provide mounts to the volume."}),"\n",(0,i.jsx)(t.h3,{id:"affinity-and-anti-affinity",children:"Affinity and anti-affinity"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"Spec:\n  Affinity:\n    Key:\n    Values:\n"})}),"\n",(0,i.jsx)(t.p,{children:"Spec is used to define the desire state of the given container."}),"\n",(0,i.jsx)(t.p,{children:"Node Affinity allows you to constrain which nodes your pod is eligible to schedule on, based on labels of the node."}),"\n",(0,i.jsx)(t.p,{children:"Inter-pod affinity allow you to constrain which nodes your pod is eligible to be scheduled based on labels on pods."}),"\n",(0,i.jsx)(t.h4,{id:"key",children:"Key"}),"\n",(0,i.jsx)(t.p,{children:"Key part of the label for node selection, this should be same as that on node. Please confirm with devops team."}),"\n",(0,i.jsx)(t.h4,{id:"values",children:"Values"}),"\n",(0,i.jsx)(t.p,{children:"Value part of the label for node selection, this should be same as that on node. Please confirm with devops team."}),"\n",(0,i.jsx)(t.h3,{id:"tolerations",children:"Tolerations"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'tolerations:\n - key: "key"\n   operator: "Equal"\n   value: "value"\n   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"\n'})}),"\n",(0,i.jsx)(t.p,{children:"Taints are the opposite, they allow a node to repel a set of pods."}),"\n",(0,i.jsx)(t.p,{children:"A given pod can access the given node and avoid the given taint only if the given pod satisfies a given taint."}),"\n",(0,i.jsx)(t.p,{children:"Taints and tolerations are a mechanism which work together that allows you to ensure that pods are not placed on inappropriate nodes. Taints are added to nodes, while tolerations are defined in the pod specification. When you taint a node, it will repel all the pods except those that have a toleration for that taint. A node can have one or many taints associated with it."}),"\n",(0,i.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"args:\n  enabled: false\n  value: []\n"})}),"\n",(0,i.jsx)(t.p,{children:"This is used to give arguments to command."}),"\n",(0,i.jsx)(t.h3,{id:"command",children:"Command"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"command:\n  enabled: false\n  value: []\n"})}),"\n",(0,i.jsx)(t.p,{children:"It contains the commands for the server."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"enabled"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"To enable or disable the command."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"value"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It contains the commands."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"containers",children:"Containers"}),"\n",(0,i.jsxs)(t.p,{children:["Containers section can be used to run side-car containers along with your main container within same pod. Containers running within same pod can share volumes and IP Address and can address each other @localhost. We can use base image inside container by setting the reuseContainerImage flag to ",(0,i.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'    containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n        command: ["/usr/local/bin/nginx"]\n        args: ["-g", "daemon off;"]\n      - reuseContainerImage: true\n        securityContext:\n          runAsUser: 1000\n          runAsGroup: 3000\n          fsGroup: 2000\n        volumeMounts:\n        - mountPath: /etc/ls-oms\n          name: ls-oms-cm-vol\n        command:\n          - flyway\n          - -configFiles=/etc/ls-oms/flyway.conf\n          - migrate\n'})}),"\n",(0,i.jsx)(t.h3,{id:"prometheus",children:"Prometheus"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"  prometheus:\n    release: monitoring\n"})}),"\n",(0,i.jsx)(t.p,{children:"It is a kubernetes monitoring tool and the name of the file to be monitored as monitoring in the given case.It describes the state of the prometheus."}),"\n",(0,i.jsx)(t.h3,{id:"rawyaml",children:"rawYaml"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"rawYaml: \n  - apiVersion: v1\n    kind: Service\n    metadata:\n      name: my-service\n    spec:\n      selector:\n        app: MyApp\n      ports:\n        - protocol: TCP\n          port: 80\n          targetPort: 9376\n      type: ClusterIP\n"})}),"\n",(0,i.jsx)(t.p,{children:"Accepts an array of Kubernetes objects. You can specify any kubernetes yaml here and it will be applied when your app gets deployed."}),"\n",(0,i.jsx)(t.h3,{id:"grace-period",children:"Grace Period"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"GracePeriod: 30\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Kubernetes waits for the specified time called the termination grace period before terminating the pods. By default, this is 30 seconds. If your pod usually takes longer than 30 seconds to shut down gracefully, make sure you increase the ",(0,i.jsx)(t.code,{children:"GracePeriod"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"A Graceful termination in practice means that your application needs to handle the SIGTERM message and begin shutting down when it receives it. This means saving all data that needs to be saved, closing down network connections, finishing any work that is left, and other similar tasks."}),"\n",(0,i.jsx)(t.p,{children:"There are many reasons why Kubernetes might terminate a perfectly healthy container. If you update your deployment with a rolling update, Kubernetes slowly terminates old pods while spinning up new ones. If you drain a node, Kubernetes terminates all pods on that node. If a node runs out of resources, Kubernetes terminates pods to free those resources. It\u2019s important that your application handle termination gracefully so that there is minimal impact on the end user and the time-to-recovery is as fast as possible."}),"\n",(0,i.jsx)(t.h3,{id:"server",children:"Server"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'server:\n  deployment:\n    image_tag: 1-95a53\n    image: ""\n'})}),"\n",(0,i.jsx)(t.p,{children:"It is used for providing server configurations."}),"\n",(0,i.jsx)(t.h4,{id:"deployment",children:"Deployment"}),"\n",(0,i.jsx)(t.p,{children:"It gives the details for deployment."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"image_tag"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It is the image tag"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"image"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It is the URL of the image"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"service-monitor",children:"Service Monitor"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"servicemonitor:\n      enabled: true\n      path: /abc\n      scheme: 'http'\n      interval: 30s\n      scrapeTimeout: 20s\n      metricRelabelings:\n        - sourceLabels: [namespace]\n          regex: '(.*)'\n          replacement: myapp\n          targetLabel: target_namespace\n"})}),"\n",(0,i.jsx)(t.p,{children:"It gives the set of targets to be monitored."}),"\n",(0,i.jsx)(t.h3,{id:"db-migration-config",children:"Db Migration Config"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"dbMigrationConfig:\n  enabled: false\n"})}),"\n",(0,i.jsx)(t.p,{children:"It is used to configure database migration."}),"\n",(0,i.jsx)(t.h3,{id:"keda-autoscaling",children:"KEDA Autoscaling"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://keda.sh",children:"KEDA"})," is a Kubernetes-based Event Driven Autoscaler. With KEDA, you can drive the scaling of any container in Kubernetes based on the number of events needing to be processed. KEDA can be installed into any Kubernetes cluster and can work alongside standard Kubernetes components like the Horizontal Pod Autoscaler(HPA)."]}),"\n",(0,i.jsx)(t.p,{children:"Example for autosccaling with KEDA using Prometheus metrics is given below:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'kedaAutoscaling:\n  enabled: true\n  minReplicaCount: 1\n  maxReplicaCount: 2\n  idleReplicaCount: 0\n  pollingInterval: 30\n  advanced:\n    restoreToOriginalReplicaCount: true\n    horizontalPodAutoscalerConfig:\n      behavior:\n        scaleDown:\n          stabilizationWindowSeconds: 300\n          policies:\n          - type: Percent\n            value: 100\n            periodSeconds: 15\n  triggers: \n    - type: prometheus\n      metadata:\n        serverAddress:  http://<prometheus-host>:9090\n        metricName: http_request_total\n        query: envoy_cluster_upstream_rq{appId="300", cluster_name="300-0", container="envoy",}\n        threshold: "50"\n  triggerAuthentication:\n    enabled: false\n    name:\n    spec: {}\n  authenticationRef: {}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Example for autosccaling with KEDA based on kafka is given below :"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'kedaAutoscaling:\n  enabled: true\n  minReplicaCount: 1\n  maxReplicaCount: 2\n  idleReplicaCount: 0\n  pollingInterval: 30\n  advanced: {}\n  triggers: \n    - type: kafka\n      metadata:\n        bootstrapServers: b-2.kafka-msk-dev.example.c2.kafka.ap-southeast-1.amazonaws.com:9092,b-3.kafka-msk-dev.example.c2.kafka.ap-southeast-1.amazonaws.com:9092,b-1.kafka-msk-dev.example.c2.kafka.ap-southeast-1.amazonaws.com:9092\n        topic: Orders-Service-ESP.info\n        lagThreshold: "100"\n        consumerGroup: oders-remove-delivered-packages\n        allowIdleConsumers: "true"\n  triggerAuthentication:\n    enabled: true\n    name: keda-trigger-auth-kafka-credential\n    spec:\n      secretTargetRef:\n        - parameter: sasl\n          name: keda-kafka-secrets\n          key: sasl\n        - parameter: username\n          name: keda-kafka-secrets\n          key: username\n  authenticationRef: \n    name: keda-trigger-auth-kafka-credential\n'})}),"\n",(0,i.jsx)(t.h3,{id:"winter-soldier",children:"Winter-Soldier"}),"\n",(0,i.jsx)(t.p,{children:"Winter Soldier can be used to"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"cleans up (delete) Kubernetes resources"}),"\n",(0,i.jsx)(t.li,{children:"reduce workload pods to 0"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.em,{children:"NOTE:"})})," After deploying this we can create the Hibernator object and provide the custom configuration by which workloads going to delete, sleep and many more.   for more information check ",(0,i.jsx)(t.a,{href:"https://github.com/devtron-labs/winter-soldier",children:"the main repo"})]}),"\n",(0,i.jsx)(t.p,{children:"Given below is template values you can give in winter-soldier:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'winterSoilder:\n  enable: false\n  apiVersion: pincher.devtron.ai/v1alpha1\n  action: sleep\n  timeRangesWithZone:\n    timeZone: "Asia/Kolkata"\n    timeRanges: []\n  targetReplicas: []\n  fieldSelector: []\n'})}),"\n",(0,i.jsx)(t.p,{children:"Here,"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"values"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"enable"})}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,i.jsx)(t.code,{children:"false"}),",",(0,i.jsx)(t.code,{children:"true"})]}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"decide the enabling factor"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"apiVersion"})}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,i.jsx)(t.code,{children:"pincher.devtron.ai/v1beta1"}),", ",(0,i.jsx)(t.code,{children:"pincher.devtron.ai/v1alpha1"})]}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"specific api version"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"action"})}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,i.jsx)(t.code,{children:"sleep"}),",",(0,i.jsx)(t.code,{children:"delete"}),", ",(0,i.jsx)(t.code,{children:"scale"})]}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"This specify  the action need to perform."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,i.jsx)(t.code,{children:"timeRangesWithZone"}),":",(0,i.jsx)(t.code,{children:"timeZone"})]}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["eg:- ",(0,i.jsx)(t.code,{children:'"Asia/Kolkata"'}),",",(0,i.jsx)(t.code,{children:'"US/Pacific"'})]}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["It use to specify the timeZone used. (It uses standard format. please refer ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",children:"this"}),")"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,i.jsx)(t.code,{children:"timeRangesWithZone"}),":",(0,i.jsx)(t.code,{children:"timeRanges"})]}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["array of [ ",(0,i.jsx)(t.code,{children:"timeFrom"}),", ",(0,i.jsx)(t.code,{children:"timeTo"}),", ",(0,i.jsx)(t.code,{children:"weekdayFrom"}),", ",(0,i.jsx)(t.code,{children:"weekdayTo"}),"]"]}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["It use to define time period/range on which the user need to perform the specified action. you can have multiple timeRanges. ",(0,i.jsx)("br",{})," These settings will take ",(0,i.jsx)(t.code,{children:"action"})," on Sat and Sun from 00:00 to 23:59:59,"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"targetReplicas"})}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,i.jsx)(t.code,{children:"[n]"})," : n - number of replicas to scale."]}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["These is mandatory field when the ",(0,i.jsx)(t.code,{children:"action"})," is ",(0,i.jsx)(t.code,{children:"scale"})," ",(0,i.jsx)("br",{})," Default value is ",(0,i.jsx)(t.code,{children:"[]"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"fieldSelector"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"- AfterTime(AddTime( ParseTime({{metadata.creationTimestamp}}, '2006-01-02T15:04:05Z'), '5m'), Now()) "})}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["These value will take a list of methods to select the resources on which we perform specified ",(0,i.jsx)(t.code,{children:"action"})," ."]})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"here is an example,"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"winterSoilder:\n  apiVersion: pincher.devtron.ai/v1alpha1 \n  enable: true\n  annotations: {}\n  labels: {}\n  timeRangesWithZone:\n    timeZone: \"Asia/Kolkata\"\n    timeRanges: \n      - timeFrom: 00:00\n        timeTo: 23:59:59\n        weekdayFrom: Sat\n        weekdayTo: Sun\n      - timeFrom: 00:00\n        timeTo: 08:00\n        weekdayFrom: Mon\n        weekdayTo: Fri\n      - timeFrom: 20:00\n        timeTo: 23:59:59\n        weekdayFrom: Mon\n        weekdayTo: Fri\n  action: scale\n  targetReplicas: [1,1,1]\n  fieldSelector: \n    - AfterTime(AddTime( ParseTime({{metadata.creationTimestamp}}, '2006-01-02T15:04:05Z'), '10h'), Now())\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Above settings will take action on ",(0,i.jsx)(t.code,{children:"Sat"})," and ",(0,i.jsx)(t.code,{children:"Sun"})," from 00:00 to 23:59:59, and on ",(0,i.jsx)(t.code,{children:"Mon"}),"-",(0,i.jsx)(t.code,{children:"Fri"})," from 00:00 to 08:00 and 20:00 to 23:59:59. If ",(0,i.jsx)(t.code,{children:"action:sleep"})," then runs hibernate at timeFrom and unhibernate at ",(0,i.jsx)(t.code,{children:"timeTo"}),". If ",(0,i.jsx)(t.code,{children:"action: delete"})," then it will delete workloads at ",(0,i.jsx)(t.code,{children:"timeFrom"})," and ",(0,i.jsx)(t.code,{children:"timeTo"}),". Here the ",(0,i.jsx)(t.code,{children:"action:scale"})," thus it scale the number of resource replicas to  ",(0,i.jsx)(t.code,{children:"targetReplicas: [1,1,1]"}),". Here each element of ",(0,i.jsx)(t.code,{children:"targetReplicas"})," array is mapped with the corresponding elements of array ",(0,i.jsx)(t.code,{children:"timeRangesWithZone/timeRanges"}),". Thus make sure the length of both array is equal, otherwise the cnages cannot be observed."]}),"\n",(0,i.jsx)(t.p,{children:"The above example will select the application objects which have been created 10 hours ago across all namespaces excluding application's namespace. Winter soldier exposes following functions to handle time, cpu and memory."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["ParseTime - This function can be used to parse time. For eg to parse creationTimestamp use ",(0,i.jsx)(t.code,{children:"ParseTime({{metadata.creationTimestamp}}, '2006-01-02T15:04:05Z')"})]}),"\n",(0,i.jsxs)(t.li,{children:["AddTime - This can be used to add time. For eg ",(0,i.jsx)(t.code,{children:"AddTime(ParseTime({{metadata.creationTimestamp}}, '2006-01-02T15:04:05Z'), '-10h')"})," ll add 10h to the time. Use d for day, h for hour, m for minutes and s for seconds. Use negative number to get earlier time."]}),"\n",(0,i.jsx)(t.li,{children:"Now - This can be used to get current time."}),"\n",(0,i.jsxs)(t.li,{children:["CpuToNumber - This can be used to compare CPU. For eg ",(0,i.jsx)(t.code,{children:"any({{spec.containers.#.resources.requests}}, { MemoryToNumber(.memory) < MemoryToNumber('60Mi')})"})," will check if any resource.requests is less than 60Mi."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"security-context",children:"Security Context"}),"\n",(0,i.jsx)(t.p,{children:"A security context defines privilege and access control settings for a Pod or Container."}),"\n",(0,i.jsx)(t.p,{children:"To add a security context for main container:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"containerSecurityContext:\n  allowPrivilegeEscalation: false\n"})}),"\n",(0,i.jsx)(t.p,{children:"To add a security context on pod level:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"podSecurityContext:\n  runAsUser: 1000\n  runAsGroup: 3000\n  fsGroup: 2000\n"})}),"\n",(0,i.jsx)(t.h3,{id:"topology-spread-constraints",children:"Topology Spread Constraints"}),"\n",(0,i.jsx)(t.p,{children:"You can use topology spread constraints to control how Pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains. This can help to achieve high availability as well as efficient resource utilization."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"topologySpreadConstraints:\n  - maxSkew: 1\n    topologyKey: zone\n    whenUnsatisfiable: DoNotSchedule\n    autoLabelSelector: true\n    customLabelSelector: {}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"deployment-metrics",children:"Deployment Metrics"}),"\n",(0,i.jsx)(t.p,{children:"It gives the realtime metrics of the deployed applications"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Key"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"Deployment Frequency"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It shows how often this app is deployed to production"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"Change Failure Rate"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It shows how often the respective pipeline fails."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"Mean Lead Time"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It shows the average time taken to deliver a change to production."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"Mean Time to Recovery"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"It shows the average time taken to fix a failed pipeline."})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"2-show-application-metrics",children:"2. Show application metrics"}),"\n",(0,i.jsx)(t.p,{children:"If you want to see application metrics like different HTTP status codes metrics, application throughput, latency, response time. Enable the Application metrics from below the deployment template Save button. After enabling it, you should be able to see all metrics on App detail page. By default it remains disabled."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/deployment-template/deployment_application_metrics.jpg",alt:"Figure 3: Application Metrics"})}),"\n",(0,i.jsxs)(t.p,{children:["Once all the Deployment template configurations are done, click on ",(0,i.jsx)(t.code,{children:"Save"})," to save your deployment configuration. Now you are ready to create ",(0,i.jsx)(t.a,{href:"/docs-devtron/docs/user-guide/creating-application/workflow/",children:"Workflow"})," to do CI/CD."]}),"\n",(0,i.jsx)(t.h3,{id:"helm-chart-json-schema",children:"Helm Chart Json Schema"}),"\n",(0,i.jsxs)(t.p,{children:["Helm Chart ",(0,i.jsx)(t.a,{href:"https://github.com/devtron-labs/devtron/blob/main/scripts/devtron-reference-helm-charts/reference-chart_5-1-0/schema.json",children:"json schema"})," is used to validate the deployment template values."]}),"\n",(0,i.jsx)(t.h3,{id:"other-validations-in-json-schema",children:"Other Validations in Json Schema"}),"\n",(0,i.jsx)(t.p,{children:"The values of CPU and Memory in limits must be greater than or equal to in requests respectively. Similarly, In case of envoyproxy, the values of limits are greater than or equal to requests as mentioned below."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"resources.limits.cpu >= resources.requests.cpu\nresources.limits.memory >= resources.requests.memory\nenvoyproxy.resources.limits.cpu >= envoyproxy.resources.requests.cpu\nenvoyproxy.resources.limits.memory >= envoyproxy.resources.requests.memory\n"})})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(6540);const i={},l=s.createContext(i);function r(e){const t=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);