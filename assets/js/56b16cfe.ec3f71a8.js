"use strict";(self.webpackChunkdocdevtron=self.webpackChunkdocdevtron||[]).push([[9611],{1370:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>x,frontMatter:()=>a,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"setup/install/installation-configuration","title":"Installation Configuration","description":"Configure Secrets","source":"@site/docs/setup/install/installation-configuration.md","sourceDirName":"setup/install","slug":"/setup/install/installation-configuration","permalink":"/docs/setup/install/installation-configuration","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Configurations","permalink":"/docs/setup/configurations/configurations-overview"},"next":{"title":"Override Default Configurations of Devtron Installation","permalink":"/docs/setup/install/override-default-devtron-installation-configs"}}');var r=t(4848),l=t(8453),i=t(1470),o=t(9365);const a={},d="Installation Configuration",c={},h=[{value:"Configure Secrets",id:"configure-secrets",level:2},{value:"Configure ConfigMaps",id:"configure-configmaps",level:2},{value:"Configure Resources",id:"configure-resources",level:2},{value:"Configure Overrides",id:"configure-overrides",level:2},{value:"Storage for Logs and Cache",id:"storage-for-logs-and-cache",level:3},{value:"<code>AWS SPECIFIC</code>",id:"aws-specific",level:4},{value:"<code>AZURE SPECIFIC</code>",id:"azure-specific",level:4},{value:"<code>GOOGLE CLOUD STORAGE SPECIFIC</code>",id:"google-cloud-storage-specific",level:4},{value:"Configuration of Blob Storage",id:"configuration-of-blob-storage",level:2},{value:"Configuring NodeSelectors and Tolerations",id:"configuring-nodeselectors-and-tolerations",level:2},{value:"Adding Custom Configurations",id:"adding-custom-configurations",level:3},{value:"Global vs. Component-level Configurations",id:"global-vs-component-level-configurations",level:3},{value:"Using <code>--set</code> Flags",id:"using---set-flags",level:3},{value:"Using <code>values.yaml</code>",id:"using-valuesyaml",level:3},{value:"Set StorageClass for Devtron Microservices",id:"set-storageclass-for-devtron-microservices",level:2},{value:"Checking for a Default StorageClass",id:"checking-for-a-default-storageclass",level:3},{value:"Setting a Default StorageClass",id:"setting-a-default-storageclass",level:3},{value:"Configure External PostgreSQL Database",id:"configure-external-postgresql-database",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Database Setup",id:"database-setup",level:3},{value:"Database Creation Commands",id:"database-creation-commands",level:4},{value:"Devtron Configuration for External DB",id:"devtron-configuration-for-external-db",level:3},{value:"Using <code>values.yaml</code> file",id:"using-valuesyaml-file",level:4},{value:"Using <code>--set</code> flags",id:"using---set-flags-1",level:4},{value:"Example",id:"example",level:4},{value:"Secrets",id:"secrets",level:2},{value:"ConfigMaps",id:"configmaps",level:2},{value:"Dashboard Configurations",id:"dashboard-configurations",level:2}];function u(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"installation-configuration",children:"Installation Configuration"})}),"\n",(0,r.jsx)(n.h2,{id:"configure-secrets",children:"Configure Secrets"}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.code,{children:"Helm"})," installation this section refers to ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"secrets"})})," section of ",(0,r.jsx)(n.code,{children:"values.yaml"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Configure the following properties:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Default"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"POSTGRESQL_PASSWORD"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Using this parameter the auto-generated password for Postgres can be edited as per requirement(Used by Devtron to store the app information)"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"NA"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"WEBHOOK_TOKEN"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"If you want to continue using Jenkins for CI then provide this for authentication of requests should be base64 encoded"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"NA"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"configure-configmaps",children:"Configure ConfigMaps"}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.code,{children:"Helm"})," installation this section refers to ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"configs"})})," section of ",(0,r.jsx)(n.code,{children:"values.yaml"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Configure the following properties:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Default"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"BASE_URL_SCHEME"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Either of HTTP or HTTPS (required)"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"HTTP"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"BASE_URL"})}),(0,r.jsxs)(n.td,{style:{textAlign:"left"},children:["URL without scheme and trailing slash, this is the domain pointing to the cluster on which the Devtron platform is being installed. For example, if you have directed domain ",(0,r.jsx)(n.code,{children:"devtron.example.com"})," to the cluster and the ingress controller is listening on port ",(0,r.jsx)(n.code,{children:"32080"})," then URL will be ",(0,r.jsx)(n.code,{children:"devtron.example.com:32080"})," (required)"]}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"change-me"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"DEX_CONFIG"})}),(0,r.jsxs)(n.td,{style:{textAlign:"left"},children:["dex config if you want to integrate login with SSO (optional) for more information check ",(0,r.jsx)(n.a,{href:"https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/",children:"Argocd documentation"})]}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"NA"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"EXTERNAL_SECRET_AMAZON_REGION"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"AWS region for the secret manager to pick (required)"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"NA"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"PROMETHEUS_URL"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"URL of Prometheus where all cluster data is stored; if this is wrong, you will not be able to see application metrics like CPU, RAM, HTTP status code, latency, and throughput (required)"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"NA"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"configure-resources",children:"Configure Resources"}),"\n",(0,r.jsxs)(n.p,{children:["Devtron provides ways to control how much ",(0,r.jsx)(n.code,{children:"memory"})," or ",(0,r.jsx)(n.code,{children:"CPU"})," can be allocated to each Devtron microservice. You can adjust the resources that are allocated to these microservices based on your requirements. The resource configurations are available in following sizes:"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Small"})}),": To configure the small resources (e.g. to manage less than 10 apps on Devtron ) based on the requirements, append the Devtron installation command with  ",(0,r.jsx)(n.code,{children:"-f https://raw.githubusercontent.com/devtron-labs/devtron/main/charts/devtron/resources-small.yaml"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"configure-overrides",children:"Configure Overrides"}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.code,{children:"Helm"})," installation this section refers to ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"customOverrides"})})," section of ",(0,r.jsx)(n.code,{children:"values.yaml"}),". In this section you can override values of devtron-cm which you want to keep persistent. For example:"]}),"\n",(0,r.jsx)(n.p,{children:"You can configure the following properties:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Default"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"CI_NODE_LABEL_SELECTOR"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Labels for a particular nodegroup which you want to use for running CIs"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"NA"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"CI_NODE_TAINTS_KEY"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Key for toleration if nodegroup chosen for CIs have some taints"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"NA"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"CI_NODE_TAINTS_VALUE"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Value for toleration if nodegroup chosen for CIs have some taints"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"NA"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"storage-for-logs-and-cache",children:"Storage for Logs and Cache"}),"\n",(0,r.jsx)(n.h4,{id:"aws-specific",children:(0,r.jsx)(n.code,{children:"AWS SPECIFIC"})}),"\n",(0,r.jsx)(n.p,{children:"While installing Devtron and using the AWS-S3 bucket for storing the logs and caches, the below parameters are to be used in the ConfigMap."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"NOTE: For using the S3 bucket it is important to add the S3 permission policy to the IAM role attached to the nodes of the cluster."}),"\n"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Default"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"DEFAULT_CACHE_BUCKET"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"AWS bucket to store docker cache, it should be created beforehand (required)"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"DEFAULT_BUILD_LOGS_BUCKET"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"AWS bucket to store build logs, it should be created beforehand (required)"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"DEFAULT_CACHE_BUCKET_REGION"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"AWS region of S3 bucket to store cache (required)"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"DEFAULT_CD_LOGS_BUCKET_REGION"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"AWS region of S3 bucket to store CD logs (required)"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"BLOB_STORAGE_S3_ENDPOINT"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"S3 compatible bucket endpoint."}),(0,r.jsx)(n.td,{style:{textAlign:"left"}})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"The below parameters are to be used in the Secrets :"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"BLOB_STORAGE_S3_ACCESS_KEY"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"AWS access key to access S3 bucket. Required if installing using AWS credentials."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"BLOB_STORAGE_S3_SECRET_KEY"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"AWS secret key to access S3 bucket. Required if installing using AWS credentials."})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"azure-specific",children:(0,r.jsx)(n.code,{children:"AZURE SPECIFIC"})}),"\n",(0,r.jsx)(n.p,{children:"While installing Devtron using Azure Blob Storage for storing logs and caches, the below parameters will be used in the ConfigMap."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"AZURE_ACCOUNT_NAME"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Account name for AZURE Blob Storage"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"AZURE_BLOB_CONTAINER_CI_LOG"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"AZURE Blob storage container for storing ci-logs after running the CI pipeline"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"AZURE_BLOB_CONTAINER_CI_CACHE"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"AZURE Blob storage container for storing ci-cache after running the CI pipeline"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"google-cloud-storage-specific",children:(0,r.jsx)(n.code,{children:"GOOGLE CLOUD STORAGE SPECIFIC"})}),"\n",(0,r.jsx)(n.p,{children:"While installing Devtron using Google Cloud Storage for storing logs and caches, the below parameters will be used in the ConfigMap."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Default"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"BLOB_STORAGE_GCP_CREDENTIALS_JSON"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Base-64 encoded GCP credentials json for accessing Google Cloud Storage"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"DEFAULT_CACHE_BUCKET"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Google Cloud Storage bucket for storing ci-logs after running the CI pipeline"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:"DEFAULT_LOGS_BUCKET"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Google Cloud Storage bucket for storing ci-cache after running the CI pipeline"}),(0,r.jsx)(n.td,{style:{textAlign:"left"}})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"To convert string to base64 use the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'echo -n "string" | base64\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensure that the ",(0,r.jsx)(n.strong,{children:"cluster has read and write access"})," to the S3 buckets/Azure Blob storage container mentioned in DEFAULT_CACHE_BUCKET, DEFAULT_BUILD_LOGS_BUCKET or AZURE_BLOB_CONTAINER_CI_LOG, or AZURE_BLOB_CONTAINER_CI_CACHE."]}),"\n",(0,r.jsxs)(n.li,{children:["Ensure that the cluster has ",(0,r.jsx)(n.strong,{children:"read access"})," to AWS secrets backends (SSM & secrets manager)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["The following tables contain parameters and their details for Secrets and ConfigMaps that are configured during the installation of Devtron.\nIf the installation is done using ",(0,r.jsx)(n.code,{children:"Helm"}),", the values can be tweaked in ",(0,r.jsx)(n.a,{href:"https://github.com/devtron-labs/charts/blob/main/charts/devtron/values.yaml",children:"values.yaml"})," file."]}),"\n",(0,r.jsxs)(n.p,{children:["We can use the ",(0,r.jsx)(n.code,{children:"--set"})," flag to override the default values when installing with Helm. For example, to update POSTGRESQL_PASSWORD and BLOB_STORAGE_PROVIDER, use the install command as:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm install devtron devtron/devtron-operator --create-namespace --namespace devtroncd \\\n--set secrets.POSTGRESQL_PASSWORD=change-me \\\n--set configs.BLOB_STORAGE_PROVIDER=S3\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-of-blob-storage",children:"Configuration of Blob Storage"}),"\n",(0,r.jsx)(n.p,{children:"Blob Storage allows users to store large amounts of unstructured data. Unstructured data is a data that does not adhere to a particular data model or definition, such as text or binary data.\nConfiguring blob storage in your Devtron environment allows you to store build logs and cache."}),"\n",(0,r.jsx)(n.p,{children:"In case, if you do not configure the Blob Storage, then:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"You will not be able to access the build and deployment logs after an hour."}),"\n",(0,r.jsx)(n.li,{children:"Build time for commit hash takes longer as cache is not available."}),"\n",(0,r.jsx)(n.li,{children:"Artifact reports cannot be generated in pre/post build and deployment stages."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"You can configure Blob Storage with one of the following Blob Storage providers given below:"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": You can also use the respective following command to switch to another Blob Storage provider. As an example, If you are using MinIO Storage and want to switch to Azure Blob Storage, use the command provided on the Azure Blob Storage tab to switch."]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(o.A,{value:"MinIO Storage",label:"MinIO Storage",children:[(0,r.jsx)(n.p,{children:"Use the following command to configure MinIO for storing logs and cache."}),(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": Unlike global cloud providers such as AWS S3 Bucket, Azure Blob Storage and Google Cloud Storage, MinIO can be hosted locally also."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm repo update\n\nhelm upgrade devtron devtron/devtron-operator --namespace devtroncd \\\n--reuse-values \\\n--set installer.modules={cicd} \\\n--set minio.enabled=true\n"})})]}),(0,r.jsxs)(o.A,{value:"AWS S3 Bucket",label:"AWS S3 Bucket",children:[(0,r.jsxs)(n.p,{children:["Use the following command to configure AWS S3 bucket for storing build logs and cache. Refer to the ",(0,r.jsx)(n.code,{children:"AWS specific"})," parameters on the ",(0,r.jsx)(n.a,{href:"#aws-specific",children:"Storage for Logs and Cache"})," page."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Configure using S3 IAM policy:"})}),"\n"]}),(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"NOTE: Please ensure that S3 permission policy to the IAM role attached to the nodes of the cluster if you are using the below command."}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm repo update\n\nhelm upgrade devtron devtron/devtron-operator --namespace devtroncd \\\n--reuse-values \\\n--set installer.modules={cicd} \\\n--set configs.BLOB_STORAGE_PROVIDER=S3 \\\n--set configs.DEFAULT_CACHE_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CACHE_BUCKET_REGION=us-east-1 \\\n--set configs.DEFAULT_BUILD_LOGS_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CD_LOGS_BUCKET_REGION=us-east-1\n"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Configure using access-key and secret-key for aws S3 authentication:"})}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm repo update\n\nhelm upgrade devtron devtron/devtron-operator --namespace devtroncd \\\n--reuse-values \\\n--set installer.modules={cicd} \\\n--set configs.BLOB_STORAGE_PROVIDER=S3 \\\n--set configs.DEFAULT_CACHE_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CACHE_BUCKET_REGION=us-east-1 \\\n--set configs.DEFAULT_BUILD_LOGS_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CD_LOGS_BUCKET_REGION=us-east-1 \\\n--set secrets.BLOB_STORAGE_S3_ACCESS_KEY=<access-key> \\\n--set secrets.BLOB_STORAGE_S3_SECRET_KEY=<secret-key>\n"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Configure using S3 compatible storages:"})}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm repo update\n\nhelm upgrade devtron devtron/devtron-operator --namespace devtroncd \\\n--reuse-values \\\n--set installer.modules={cicd} \\\n--set configs.BLOB_STORAGE_PROVIDER=S3 \\\n--set configs.DEFAULT_CACHE_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CACHE_BUCKET_REGION=us-east-1 \\\n--set configs.DEFAULT_BUILD_LOGS_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CD_LOGS_BUCKET_REGION=us-east-1 \\\n--set secrets.BLOB_STORAGE_S3_ACCESS_KEY=<access-key> \\\n--set secrets.BLOB_STORAGE_S3_SECRET_KEY=<secret-key> \\\n--set configs.BLOB_STORAGE_S3_ENDPOINT=<endpoint>\n"})})]}),(0,r.jsxs)(o.A,{value:"Azure Blob Storage",label:"Azure Blob Storage",children:[(0,r.jsxs)(n.p,{children:["Use the following command to configure Azure Blob Storage for storing build logs and cache.\nRefer to the ",(0,r.jsx)(n.code,{children:"Azure specific"})," parameters on the ",(0,r.jsx)(n.a,{href:"#azure-specific",children:"Storage for Logs and Cache"})," page."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm repo update\nhelm upgrade devtron devtron/devtron-operator --namespace devtroncd \\\n--reuse-values \\\n--set installer.modules={cicd} \\\n--set secrets.AZURE_ACCOUNT_KEY=xxxxxxxxxx \\\n--set configs.BLOB_STORAGE_PROVIDER=AZURE \\\n--set configs.AZURE_ACCOUNT_NAME=test-account \\\n--set configs.AZURE_BLOB_CONTAINER_CI_LOG=ci-log-container \\\n--set configs.AZURE_BLOB_CONTAINER_CI_CACHE=ci-cache-container\n"})})]}),(0,r.jsxs)(o.A,{value:"Google Cloud Storage",label:"Google Cloud Storage",children:[(0,r.jsxs)(n.p,{children:["Use the following command to configure Google Cloud Storage for storing build logs and cache.\nRefer to the ",(0,r.jsx)(n.code,{children:"Google Cloud specific"})," parameters on the ",(0,r.jsx)(n.a,{href:"#google-cloud-storage-specific",children:"Storage for Logs and Cache"})," page."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm repo update\n\nhelm upgrade devtron devtron/devtron-operator --namespace devtroncd \\\n--reuse-values \\\n--set installer.modules={cicd} \\\n--set configs.BLOB_STORAGE_PROVIDER=GCP \\\n--set secrets.BLOB_STORAGE_GCP_CREDENTIALS_JSON=eyJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsInByb2plY3RfaWQiOiAiPHlvdXItcHJvamVjdC1pZD4iLCJwcml2YXRlX2tleV9pZCI6ICI8eW91ci1wcml2YXRlLWtleS1pZD4iLCJwcml2YXRlX2tleSI6ICI8eW91ci1wcml2YXRlLWtleT4iLCJjbGllbnRfZW1haWwiOiAiPHlvdXItY2xpZW50LWVtYWlsPiIsImNsaWVudF9pZCI6ICI8eW91ci1jbGllbnQtaWQ+IiwiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL2F1dGgiLCJ0b2tlbl91cmkiOiAiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW4iLCJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiPHlvdXItY2xpZW50LWNlcnQtdXJsPiJ9Cg== \\\n--set configs.DEFAULT_CACHE_BUCKET=cache-bucket \\\n--set configs.DEFAULT_BUILD_LOGS_BUCKET=log-bucket\n"})})]}),(0,r.jsxs)(o.A,{value:"S3-compatible Storage",label:"S3-compatible Storage",children:[(0,r.jsx)(n.p,{children:"Use the following command to configure S3-compatible storage (e.g., Longhorn) for storing build logs and cache."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm repo update\n\nhelm upgrade devtron devtron/devtron-operator --namespace devtroncd \\\n--reuse-values \\\n--set configs.BLOB_STORAGE_PROVIDER=S3 \\\n--set configs.DEFAULT_CACHE_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CACHE_BUCKET_REGION=us-east-1 \\\n--set configs.DEFAULT_BUILD_LOGS_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CD_LOGS_BUCKET_REGION=us-east-1 \\\n--set secrets.BLOB_STORAGE_S3_ACCESS_KEY=<access-key> \\\n--set secrets.BLOB_STORAGE_S3_SECRET_KEY=<secret-key> \\\n--set configs.BLOB_STORAGE_S3_ENDPOINT=<endpoint>\n"})})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"configuring-nodeselectors-and-tolerations",children:"Configuring NodeSelectors and Tolerations"}),"\n",(0,r.jsx)(n.h3,{id:"adding-custom-configurations",children:"Adding Custom Configurations"}),"\n",(0,r.jsxs)(n.p,{children:["When installing Devtron, you can specify ",(0,r.jsx)(n.code,{children:"nodeSelectors"})," and ",(0,r.jsx)(n.code,{children:"tolerations"})," to fine-tune your deployment. These configurations can be added using either additional ",(0,r.jsx)(n.code,{children:"--set"})," flags or a separate ",(0,r.jsx)(n.code,{children:"values.yaml"})," file."]}),"\n",(0,r.jsx)(n.h3,{id:"global-vs-component-level-configurations",children:"Global vs. Component-level Configurations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Global Configurations"}),": When specified at the global level, these settings apply to all Devtron microservices, except for ArgoCD."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Component-Level Configurations"}),": You can also apply these settings to specific components individually."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Priority"}),": If a configuration is specified at both the global and component levels, the component-level setting takes precedence for that particular component."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"using---set-flags",children:["Using ",(0,r.jsx)(n.code,{children:"--set"})," Flags"]}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ",(0,r.jsx)(n.code,{children:"--set"})," flag to specify individual values directly in the Helm command."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"nodeSelector"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"To set a nodeSelector:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'helm install devtron devtron/devtron-operator \\\n    --create-namespace --namespace devtroncd \\\n    --set global.nodeSelector."kubernetes\\.io/hostname"=node1\n'})}),"\n",(0,r.jsx)(n.p,{children:'This example sets the nodeSelector to schedule pods on a node with the hostname "node1".'}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Tolerations"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"To set tolerations:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm install devtron devtron/devtron-operator \\\n    --create-namespace --namespace devtroncd \\\n    --set global.tolerations[0].key=example-key \\\n    --set global.tolerations[0].operator=Exists \\\n    --set global.tolerations[0].effect=NoSchedule \\\n    --set global.tolerations[0].value=value1\n"})}),"\n",(0,r.jsx)(n.p,{children:'This example adds a tolerance for pods to be scheduled on nodes with the taint "example-key".'}),"\n",(0,r.jsxs)(n.h3,{id:"using-valuesyaml",children:["Using ",(0,r.jsx)(n.code,{children:"values.yaml"})]}),"\n",(0,r.jsx)(n.p,{children:"In the values.yaml file of devtron chart, set the values of the following fields:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'global:\n  nodeSelector:\n    kubernetes.io/hostname: node1  # For nodeSelector\n  tolerations:\n    - key: example-key  # For tolerations\n      operator: Exists\n      value: "value1"\n      effect: NoSchedule\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"set-storageclass-for-devtron-microservices",children:"Set StorageClass for Devtron Microservices"}),"\n",(0,r.jsx)(n.p,{children:"You can specify a StorageClass to be used by Devtron microservices' Persistent Volume Claims (PVCs) if a default StorageClass is not already configured in your cluster."}),"\n",(0,r.jsx)(n.h3,{id:"checking-for-a-default-storageclass",children:"Checking for a Default StorageClass"}),"\n",(0,r.jsx)(n.p,{children:"To check if your cluster has a default StorageClass, run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl get sc\n"})}),"\n",(0,r.jsx)(n.p,{children:"This command will list all available StorageClasses in your cluster, including the default storage class set (if any). The default StorageClass (if any) can be identified by the (default) label next to its name."}),"\n",(0,r.jsx)(n.h3,{id:"setting-a-default-storageclass",children:"Setting a Default StorageClass"}),"\n",(0,r.jsx)(n.p,{children:"If no StorageClass class is set as default, you can set one using the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'kubectl patch storageclass <storageclassname> -p \'{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Or, if you do not want to change the default StorageClass or prefer to use a different StorageClass for Devtron microservices, specify it during installation using the ",(0,r.jsx)(n.code,{children:"--set"})," flag:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'helm install devtron devtron/devtron-operator \\\n    --create-namespace --namespace devtroncd \\\n    --set global.storageClass="<storageclassname>" # set your preferred StorageClass\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Alternatively, you can specify the StorageClass in the values.yaml file by modifying the ",(0,r.jsx)(n.a,{href:"https://github.com/devtron-labs/devtron/blob/main/charts/devtron/values.yaml#L23",children:"following line in values.yaml"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"configure-external-postgresql-database",children:"Configure External PostgreSQL Database"}),"\n",(0,r.jsx)(n.p,{children:"You can configure Devtron to use an external PostgreSQL database (e.g., Amazon RDS, Google Cloud SQL, Azure PostgreSQL) instead of the default internal database."}),"\n",(0,r.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"An external PostgreSQL server that is running and accessible"}),"\n",(0,r.jsx)(n.li,{children:"PostgreSQL version must be 14"}),"\n",(0,r.jsxs)(n.li,{children:["The username Devtron uses to connect with PostgreSQL must be ",(0,r.jsx)(n.code,{children:"postgres"})]}),"\n",(0,r.jsx)(n.li,{children:"Network connectivity between Devtron and PostgreSQL server"}),"\n",(0,r.jsx)(n.li,{children:"DNS mapping must be completed for your PostgreSQL server"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"database-setup",children:"Database Setup"}),"\n",(0,r.jsx)(n.p,{children:"Before installing Devtron, create the following databases on your external PostgreSQL server."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"orchestrator"})," - Main Devtron orchestration database"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"lens"})," - Lens service database"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"git_sensor"})," - Git sensor service database"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"casbin"})," - Authorization and policy database"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"clairv4"})," - (",(0,r.jsx)(n.em,{children:"Optional"}),") Required only if you are using ",(0,r.jsx)(n.a,{href:"/docs/user-guide/integrations/vulnerability-scanning/clair",children:"Clair"})," for image scanning instead of ",(0,r.jsx)(n.a,{href:"/docs/user-guide/integrations/vulnerability-scanning/trivy",children:"Trivy"})]}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{title:"Not sure how to create a PostgreSQL database?",type:"warning",children:[(0,r.jsx)(n.p,{children:"Here\u2019s how you can create databases using popular providers:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CreateDBInstance.html",children:"Amazon RDS instance"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://cloud.google.com/sql/docs/postgres/create-instance#create-2nd-gen",children:"Google Cloud SQL for PostgreSQL"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/quickstart-create-server",children:"Azure Database for PostgreSQL"})}),"\n"]})]}),"\n",(0,r.jsx)(n.h4,{id:"database-creation-commands",children:"Database Creation Commands"}),"\n",(0,r.jsxs)(n.p,{children:["Connect to your PostgreSQL server as the ",(0,r.jsx)(n.code,{children:"postgres"})," user and run the following commands:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Connect as postgres user\nCREATE DATABASE orchestrator;\nCREATE DATABASE lens;\nCREATE DATABASE git_sensor;\nCREATE DATABASE casbin;\n\n-- Optional: Only if using Clair for image scanning\nCREATE DATABASE clairv4;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"devtron-configuration-for-external-db",children:"Devtron Configuration for External DB"}),"\n",(0,r.jsx)(n.admonition,{title:"Note",type:"warning",children:(0,r.jsxs)(n.p,{children:["Ensure the ",(0,r.jsx)(n.a,{href:"#database-creation-commands",children:"required databases"})," exist before proceeding."]})}),"\n",(0,r.jsx)(n.p,{children:"When installing Devtron, you can specify your external PostgreSQL by using either of the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Updating ",(0,r.jsx)(n.code,{children:"values.yaml"})," file"]}),"\n",(0,r.jsxs)(n.li,{children:["Passing ",(0,r.jsx)(n.code,{children:"--set"})," flags during Helm installation"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"using-valuesyaml-file",children:["Using ",(0,r.jsx)(n.code,{children:"values.yaml"})," file"]}),"\n",(0,r.jsxs)(n.p,{children:["You can specify the following parameters in your Devtron ",(0,r.jsx)(n.a,{href:"https://github.com/devtron-labs/devtron/blob/main/charts/devtron/values.yaml#L12",children:"values.yaml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'externalPostgres:\n  enabled: true\n  # Password for the postgres user\n  PG_PASSWORD: "your_postgres_password"\n  # DNS endpoint of your PostgreSQL server\n  PG_ADDR: "your.postgres.endpoint"\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"using---set-flags-1",children:["Using ",(0,r.jsx)(n.code,{children:"--set"})," flags"]}),"\n",(0,r.jsxs)(n.p,{children:["You can use the following ",(0,r.jsx)(n.code,{children:"--set"})," flags when installing Devtron with Helm:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'helm install devtron devtron/devtron-operator \\\n  --set global.externalPostgres.enabled=true \\\n  --set global.externalPostgres.PG_PASSWORD="your_postgres_password" \\\n  --set global.externalPostgres.PG_ADDR="your.postgres.endpoint"\n'})}),"\n",(0,r.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'helm install devtron devtron/devtron-operator \\\n  --set global.externalPostgres.enabled=true \\\n  --set global.externalPostgres.PG_PASSWORD="mySecurePassword123" \\\n  --set global.externalPostgres.PG_ADDR="postgres.example.com"\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"secrets",children:"Secrets"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Necessity"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ACD_PASSWORD"}),(0,r.jsx)(n.td,{children:"ArgoCD Password for CD Workflow"}),(0,r.jsx)(n.td,{children:"Auto-Generated"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AZURE_ACCOUNT_KEY"}),(0,r.jsx)(n.td,{children:"Account key to access Azure objects such as BLOB_CONTAINER_CI_LOG or CI_CACHE"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Mandatory (If using Azure)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GRAFANA_PASSWORD"}),(0,r.jsx)(n.td,{children:"Password for Grafana to display graphs"}),(0,r.jsx)(n.td,{children:"Auto-Generated"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"POSTGRESQL_PASSWORD"}),(0,r.jsx)(n.td,{children:"Password for your Postgresql database that will be used to access the database"}),(0,r.jsx)(n.td,{children:"Auto-Generated"}),(0,r.jsx)(n.td,{children:"Optional"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"configmaps",children:"ConfigMaps"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Necessity"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AZURE_ACCOUNT_NAME"}),(0,r.jsx)(n.td,{children:"Azure account name which you will use"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Mandatory (If using Azure)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AZURE_BLOB_CONTAINER_CI_LOG"}),(0,r.jsx)(n.td,{children:"Name of container created for storing CI_LOG"}),(0,r.jsx)(n.td,{children:"ci-log-container"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AZURE_BLOB_CONTAINER_CI_CACHE"}),(0,r.jsx)(n.td,{children:"Name of container created for storing CI_CACHE"}),(0,r.jsx)(n.td,{children:"ci-cache-container"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"BLOB_STORAGE_PROVIDER"}),(0,r.jsx)(n.td,{children:"Cloud provider name which you will use"}),(0,r.jsx)(n.td,{children:"MINIO"}),(0,r.jsx)(n.td,{children:"Mandatory (If using any cloud other than MINIO), MINIO/AZURE/S3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DEFAULT_BUILD_LOGS_BUCKET"}),(0,r.jsx)(n.td,{children:"S3 Bucket name used for storing Build Logs"}),(0,r.jsx)(n.td,{children:"devtron-ci-log"}),(0,r.jsx)(n.td,{children:"Mandatory (If using AWS)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DEFAULT_CD_LOGS_BUCKET_REGION"}),(0,r.jsx)(n.td,{children:"Region of S3 Bucket where CD Logs are being stored"}),(0,r.jsx)(n.td,{children:"us-east-1"}),(0,r.jsx)(n.td,{children:"Mandatory (If using AWS)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DEFAULT_CACHE_BUCKET"}),(0,r.jsx)(n.td,{children:"S3 Bucket name used for storing CACHE (Do not include s3://)"}),(0,r.jsx)(n.td,{children:"devtron-ci-cache"}),(0,r.jsx)(n.td,{children:"Mandatory (If using AWS)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DEFAULT_CACHE_BUCKET_REGION"}),(0,r.jsx)(n.td,{children:"S3 Bucket region where Cache is being stored"}),(0,r.jsx)(n.td,{children:"us-east-1"}),(0,r.jsx)(n.td,{children:"Mandatory (If using AWS)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"EXTERNAL_SECRET_AMAZON_REGION"}),(0,r.jsx)(n.td,{children:"Region where the cluster is setup for Devtron installation"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Mandatory (If using AWS)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ENABLE_INGRESS"}),(0,r.jsx)(n.td,{children:"To enable Ingress (True/False)"}),(0,r.jsx)(n.td,{children:"False"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"INGRESS_ANNOTATIONS"}),(0,r.jsx)(n.td,{children:"Annotations for ingress"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PROMETHEUS_URL"}),(0,r.jsx)(n.td,{children:"Existing Prometheus URL if it is installed"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CI_NODE_LABEL_SELECTOR"}),(0,r.jsx)(n.td,{children:"Label of CI worker node"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CI_NODE_TAINTS_KEY"}),(0,r.jsx)(n.td,{children:"Taint key name of CI worker node"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CI_NODE_TAINTS_VALUE"}),(0,r.jsx)(n.td,{children:"Value of taint key of CI node"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CI_DEFAULT_ADDRESS_POOL_BASE_CIDR"}),(0,r.jsx)(n.td,{children:"CIDR ranges used to allocate subnets in each IP address pool for CI"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CI_DEFAULT_ADDRESS_POOL_SIZE"}),(0,r.jsx)(n.td,{children:"The subnet size to allocate from the base pool for CI"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CD_NODE_LABEL_SELECTOR"}),(0,r.jsx)(n.td,{children:"Label of CD node"}),(0,r.jsx)(n.td,{children:"kubernetes.io/os=linux"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CD_NODE_TAINTS_KEY"}),(0,r.jsx)(n.td,{children:"Taint key name of CD node"}),(0,r.jsx)(n.td,{children:"dedicated"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CD_NODE_TAINTS_VALUE"}),(0,r.jsx)(n.td,{children:"Value of taint key of CD node"}),(0,r.jsx)(n.td,{children:"ci"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CD_LIMIT_CI_CPU"}),(0,r.jsx)(n.td,{children:"CPU limit for pre and post CD Pod"}),(0,r.jsx)(n.td,{children:"0.5"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CD_LIMIT_CI_MEM"}),(0,r.jsx)(n.td,{children:"Memory limit for pre and post CD Pod"}),(0,r.jsx)(n.td,{children:"3G"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CD_REQ_CI_CPU"}),(0,r.jsx)(n.td,{children:"CPU request for CI Pod"}),(0,r.jsx)(n.td,{children:"0.5"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CD_REQ_CI_MEM"}),(0,r.jsx)(n.td,{children:"Memory request for CI Pod"}),(0,r.jsx)(n.td,{children:"1G"}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CD_DEFAULT_ADDRESS_POOL_BASE_CIDR"}),(0,r.jsx)(n.td,{children:"CIDR ranges used to allocate subnets in each IP address pool for CD"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CD_DEFAULT_ADDRESS_POOL_SIZE"}),(0,r.jsx)(n.td,{children:"The subnet size to allocate from the base pool for CD"}),(0,r.jsx)(n.td,{children:'""'}),(0,r.jsx)(n.td,{children:"Optional"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GITOPS_REPO_PREFIX"}),(0,r.jsx)(n.td,{children:"Prefix for Gitops repository"}),(0,r.jsx)(n.td,{children:"devtron"}),(0,r.jsx)(n.td,{children:"Optional"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"dashboard-configurations",children:"Dashboard Configurations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"RECOMMEND_SECURITY_SCANNING=false\nFORCE_SECURITY_SCANNING=false\nHIDE_DISCORD=false\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"RECOMMEND_SECURITY_SCANNING"}),(0,r.jsxs)(n.td,{children:["If True, ",(0,r.jsx)(n.code,{children:"security scanning"})," is ",(0,r.jsx)(n.code,{children:"enabled"})," by default for a new build pipeline. Users can however turn it off in the new or existing pipelines."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"FORCE_SECURITY_SCANNING"}),(0,r.jsxs)(n.td,{children:["If set to True, ",(0,r.jsx)(n.code,{children:"security scanning"})," is forcefully ",(0,r.jsx)(n.code,{children:"enabled"})," by default for a new build pipeline. Users can not turn it off for new as well as for existing build pipelines. Old pipelines that have security scanning disabled will remain unchanged and image scanning should be enabled manually for them."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"HIDE_DISCORD"}),(0,r.jsx)(n.td,{children:"Hides discord chatbot from the dashboard."})]})]})]})]})}function x(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},1470:(e,n,t)=>{t.d(n,{A:()=>v});var s=t(6540),r=t(4164),l=t(3104),i=t(6347),o=t(205),a=t(7485),d=t(1682),c=t(679);function h(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:t,default:s}})=>({value:e,label:n,attributes:t,default:s}))}(t);return function(e){const n=(0,d.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function x({value:e,tabValues:n}){return n.some(n=>n.value===e)}function g({queryString:e=!1,groupId:n}){const t=(0,i.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,a.aZ)(r),(0,s.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}function j(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,l=u(e),[i,a]=(0,s.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:l})),[d,h]=g({queryString:t,groupId:r}),[j,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,c.Dv)(n);return[t,(0,s.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),p=(()=>{const e=d??j;return x({value:e,tabValues:l})?e:null})();(0,o.A)(()=>{p&&a(p)},[p]);return{selectedValue:i,selectValue:(0,s.useCallback)(e=>{if(!x({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),f(e)},[h,f,l]),tabValues:l}}var f=t(2303);const p={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=t(4848);function A({className:e,block:n,selectedValue:t,selectValue:s,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:a}=(0,l.a_)(),d=e=>{const n=e.currentTarget,r=o.indexOf(n),l=i[r].value;l!==t&&(a(n),s(l))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:s})=>(0,m.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:c,onClick:d,...s,className:(0,r.A)("tabs__item",p.tabItem,s?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function b({lazy:e,children:n,selectedValue:t}){const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=l.find(e=>e.props.value===t);return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function C(e){const n=j(e);return(0,m.jsxs)("div",{className:(0,r.A)("tabs-container",p.tabList),children:[(0,m.jsx)(A,{...n,...e}),(0,m.jsx)(b,{...n,...e})]})}function v(e){const n=(0,f.A)();return(0,m.jsx)(C,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(6540);const r={},l=s.createContext(r);function i(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(l.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var s=t(4164);const r={tabItem:"tabItem_Ymn6"};var l=t(4848);function i({children:e,hidden:n,className:t}){return(0,l.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,t),hidden:n,children:e})}}}]);