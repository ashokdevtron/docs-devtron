"use strict";(self.webpackChunkdocdevtron=self.webpackChunkdocdevtron||[]).push([[1705],{6669:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"user-guide/plugins/semgrep","title":"Semgrep","description":"Semgrep is a fast, open source, static analysis engine for finding bugs, detecting dependency vulnerabilities, and enforcing code standards.","source":"@site/docs/user-guide/plugins/semgrep.md","sourceDirName":"user-guide/plugins","slug":"/user-guide/plugins/semgrep","permalink":"/docs/user-guide/plugins/semgrep","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Pull images from container repository","permalink":"/docs/user-guide/plugins/pull-images-from-container-repository"},"next":{"title":"SonarQube","permalink":"/docs/user-guide/plugins/sonarqube"}}');var s=r(4848),t=r(8453);const d={},l="Semgrep",c={},o=[];function a(e){const n={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"semgrep",children:"Semgrep"})}),"\n",(0,s.jsx)(n.p,{children:"Semgrep is a fast, open source, static analysis engine for finding bugs, detecting dependency vulnerabilities, and enforcing code standards."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Prerequisite"}),": Make sure you have set up an account in ",(0,s.jsx)(n.code,{children:"Semgrep"})," or get the API keys from an admin."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["On the ",(0,s.jsx)(n.strong,{children:"Edit build pipeline"})," page, select the ",(0,s.jsx)(n.strong,{children:"Pre-Build Stage"})," (or Post-Build Stage)."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"+ Add task"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Select ",(0,s.jsx)(n.strong,{children:"Semgrep"})," from ",(0,s.jsx)(n.strong,{children:"PRESET PLUGINS"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Enter a relevant name in the ",(0,s.jsx)(n.code,{children:"Task name"})," field. It is a mandatory field."]}),"\n",(0,s.jsxs)(n.li,{children:["Enter a descriptive message for the task in the ",(0,s.jsx)(n.code,{children:"Description"})," field. It is an optional field."]}),"\n",(0,s.jsxs)(n.li,{children:["Provide a value for the input variable.",(0,s.jsx)("br",{})," Note: The value may be any of the values from the previous build stages, a global variable, or a custom value."]}),"\n"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Variable"}),(0,s.jsx)(n.th,{children:"Format"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SemgrepAppToken"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"App token of Semgrep. If it is provided, this token will be used, otherwise it will be picked from Global Secret."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"PrefixAppNameInSemgrepBranchName"}),(0,s.jsx)(n.td,{children:"Bool"}),(0,s.jsxs)(n.td,{children:["Enter either ",(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"false"})," accordingly whether you want app name to be reflected with a branch name. If it is ",(0,s.jsx)(n.code,{children:"true"}),", it will add app name with branch name. E.g., ",(0,s.jsx)(n.code,{children:"{SemgrepAppName}"}),"-",(0,s.jsx)(n.code,{children:"{branchName}"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"UseCommitAsSemgrepBranchName"}),(0,s.jsx)(n.td,{children:"Bool"}),(0,s.jsxs)(n.td,{children:["Enter either ",(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"false"})," accordingly whether you want app name to be reflected with commit hash. If it is ",(0,s.jsx)(n.code,{children:"true"}),", it will add app name with commit hash. E.g., ",(0,s.jsx)(n.code,{children:"{SemgrepAppName}"}),"-",(0,s.jsx)(n.code,{children:"{CommitHash}"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SemgrepAppName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsxs)(n.td,{children:["App name for Semgrep. If it is provided, and ",(0,s.jsx)(n.code,{children:"PrefixAppNameInSemgrepBranchName"})," is true, then this will be prefixed with branch name/commit hash."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ExtraCommandArguments"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Extra command arguments for Semgrep CI command. E.g., Input: --json --dry-run."})]})]})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Trigger/Skip Condition"})," refers to a conditional statement to execute or skip the task. You can select either:",(0,s.jsxs)("ul",{children:[(0,s.jsxs)("li",{children:[(0,s.jsx)(n.code,{children:"Set trigger conditions"})," or"]}),(0,s.jsx)("li",{children:(0,s.jsx)(n.code,{children:"Set skip conditions"})})]})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click ",(0,s.jsx)(n.strong,{children:"Update Pipeline"}),"."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var i=r(6540);const s={},t=i.createContext(s);function d(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);