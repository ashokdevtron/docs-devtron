"use strict";(self.webpackChunkdocdevtron=self.webpackChunkdocdevtron||[]).push([[4305],{1470:(e,n,t)=>{t.d(n,{A:()=>A});var s=t(6540),l=t(4164),a=t(3104),r=t(6347),o=t(205),i=t(7485),c=t(1682),d=t(679);function h(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:t,default:s}})=>({value:e,label:n,attributes:t,default:s}))}(t);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function v({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const t=(0,r.W6)(),l=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,i.aZ)(l),(0,s.useCallback)(e=>{if(!l)return;const n=new URLSearchParams(t.location.search);n.set(l,e),t.replace({...t.location,search:n.toString()})},[l,t])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:l}=e,a=u(e),[r,i]=(0,s.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!v({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a})),[c,h]=p({queryString:t,groupId:l}),[m,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,l]=(0,d.Dv)(n);return[t,(0,s.useCallback)(e=>{n&&l.set(e)},[n,l])]}({groupId:l}),f=(()=>{const e=c??m;return v({value:e,tabValues:a})?e:null})();(0,o.A)(()=>{f&&i(f)},[f]);return{selectedValue:r,selectValue:(0,s.useCallback)(e=>{if(!v({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);i(e),h(e),g(e)},[h,g,a]),tabValues:a}}var g=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function x({className:e,block:n,selectedValue:t,selectValue:s,tabValues:r}){const o=[],{blockElementScrollPositionUntilNextRender:i}=(0,a.a_)(),c=e=>{const n=e.currentTarget,l=o.indexOf(n),a=r[l].value;a!==t&&(i(n),s(a))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":n},e),children:r.map(({value:e,label:n,attributes:s})=>(0,b.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...s,className:(0,l.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function j({lazy:e,children:n,selectedValue:t}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===t);return e?(0,s.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function y(e){const n=m(e);return(0,b.jsxs)("div",{className:(0,l.A)("tabs-container",f.tabList),children:[(0,b.jsx)(x,{...n,...e}),(0,b.jsx)(j,{...n,...e})]})}function A(e){const n=(0,g.A)();return(0,b.jsx)(y,{...e,children:h(e.children)},String(n))}},7277:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>v,frontMatter:()=>i,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"setup/install/install-devtron-helm-3","title":"Install Devtron using Helm","description":"Before you begin","source":"@site/docs/setup/install/install-devtron-helm-3.md","sourceDirName":"setup/install","slug":"/setup/install/install-devtron-helm-3","permalink":"/docs/setup/install/install-devtron-helm-3","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var l=t(4848),a=t(8453),r=t(1470),o=t(9365);const i={},c="Install Devtron using Helm",d={},h=[{value:"Before you begin",id:"before-you-begin",level:2},{value:"Installing Devtron using Helm",id:"installing-devtron-using-helm",level:2},{value:"Installing Devtron (Beta) using Helm",id:"installing-devtron-beta-using-helm",level:2},{value:"Check Devtron installation status",id:"check-devtron-installation-status",level:2},{value:"Check the installer logs",id:"check-the-installer-logs",level:2},{value:"Access Devtron dashboard",id:"access-devtron-dashboard",level:2},{value:"Devtron Admin credentials",id:"devtron-admin-credentials",level:3},{value:"For Devtron version v0.6.0 and higher",id:"for-devtron-version-v060-and-higher",level:4},{value:"For Devtron version less than v0.6.0",id:"for-devtron-version-less-than-v060",level:4},{value:"Cleaning Devtron Installer Helm3",id:"cleaning-devtron-installer-helm3",level:2},{value:"Cleanup",id:"cleanup",level:3},{value:"FAQs",id:"faqs",level:3}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"install-devtron-using-helm",children:"Install Devtron using Helm"})}),"\n",(0,l.jsx)(n.h2,{id:"before-you-begin",children:"Before you begin"}),"\n",(0,l.jsxs)(n.p,{children:["Install ",(0,l.jsx)(n.a,{href:"https://helm.sh/docs/intro/install/",children:"Helm3"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"installing-devtron-using-helm",children:"Installing Devtron using Helm"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Add Devtron repository"}),"\n",(0,l.jsx)(n.li,{children:"Update Devtron repository"}),"\n",(0,l.jsx)(n.li,{children:"Install Devtron"}),"\n"]}),"\n",(0,l.jsxs)(r.A,{children:[(0,l.jsxs)(o.A,{value:"Install with default configurations",label:"Install with default configurations",children:[(0,l.jsx)(n.p,{children:"This installation will use Minio for storing build logs and cache."}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"helm repo add devtron https://helm.devtron.ai\n\nhelm repo update devtron\n\nhelm install devtron devtron/devtron-operator --create-namespace --namespace devtroncd \\\n--set installer.modules={cicd}\n"})})]}),(0,l.jsxs)(o.A,{value:"Install with AWS S3 Buckets",label:"Install with AWS S3 Buckets",children:[(0,l.jsxs)(n.p,{children:["This installation will use AWS s3 buckets for storing build logs and cache. Refer to the ",(0,l.jsx)(n.code,{children:"AWS specific"})," parameters on the ",(0,l.jsx)(n.a,{href:"./installation-configuration#storage-for-logs-and-cache",children:"Storage for Logs and Cache"})," page."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"helm repo add devtron https://helm.devtron.ai\nhelm repo update devtron\nhelm install devtron devtron/devtron-operator --create-namespace --namespace devtroncd \\\n--set installer.modules={cicd} \\\n--set configs.BLOB_STORAGE_PROVIDER=S3 \\\n--set configs.DEFAULT_CACHE_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CACHE_BUCKET_REGION=us-east-1 \\\n--set configs.DEFAULT_BUILD_LOGS_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CD_LOGS_BUCKET_REGION=us-east-1\n"})})]}),(0,l.jsxs)(o.A,{value:"Install with Azure Blob Storage",label:"Install with Azure Blob Storage",children:[(0,l.jsxs)(n.p,{children:["This installation will use Azure Blob Storage for storing build logs and cache.\nRefer to the ",(0,l.jsx)(n.code,{children:"Azure specific"})," parameters on the ",(0,l.jsx)(n.a,{href:"./installation-configuration#storage-for-logs-and-cache",children:"Storage for Logs and Cache"})," page."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"helm repo add devtron https://helm.devtron.ai\nhelm repo update devtron\nhelm install devtron devtron/devtron-operator --create-namespace --namespace devtroncd \\\n--set installer.modules={cicd} \\\n--set secrets.AZURE_ACCOUNT_KEY=xxxxxxxxxx \\\n--set configs.BLOB_STORAGE_PROVIDER=AZURE \\\n--set configs.AZURE_ACCOUNT_NAME=test-account \\\n--set configs.AZURE_BLOB_CONTAINER_CI_LOG=ci-log-container \\\n--set configs.AZURE_BLOB_CONTAINER_CI_CACHE=ci-cache-container\n"})})]})]}),"\n",(0,l.jsx)(n.p,{children:"For those countries/users where Github is blocked, you can use Gitee as the installation source."}),"\n",(0,l.jsx)(r.A,{children:(0,l.jsx)(o.A,{value:"Install with Gitee",label:"Install with Gitee",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"helm repo add devtron https://helm.devtron.ai\nhelm install devtron devtron/devtron-operator --create-namespace --namespace devtroncd --set installer.source=gitee\n"})})})}),"\n",(0,l.jsxs)(n.p,{children:["If you are planning to use Devtron for ",(0,l.jsx)(n.code,{children:"production deployments"}),", please refer to our recommended overrides for ",(0,l.jsx)(n.a,{href:"/docs/setup/install/override-default-devtron-installation-configs",children:"Devtron Installation"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"installing-devtron-beta-using-helm",children:"Installing Devtron (Beta) using Helm"}),"\n",(0,l.jsx)(n.p,{children:"We also release beta versions of devtron every few days before the stable release for people who would like to explore and test beta features before everyone else. If you want to install a fresh devtron from beta release channel, use the chart in our official devtron repository."}),"\n",(0,l.jsx)(n.p,{children:"This chart is currently not available on the official helm repository therefore you need to download it to install it."}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Clone Devtron Repository"}),"\n",(0,l.jsx)(n.li,{children:"Upgrade Helm Dependency"}),"\n",(0,l.jsx)(n.li,{children:"Install Devtron"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"$ git clone [https://github.com/devtron-labs/devtron.git](https://github.com/devtron-labs/devtron.git)\n$ cd devtron/charts/devtron\n$ helm dependency up\n$ #modify values in values.yaml\n$ helm install devtron . --create-namespace --namespace devtroncd \\\n--set installer.modules={cicd}\n"})}),"\n",(0,l.jsxs)(r.A,{children:[(0,l.jsxs)(o.A,{value:"Install with AWS S3 Buckets",label:"Install with AWS S3 Buckets",children:[(0,l.jsxs)(n.p,{children:["This installation will use AWS s3 buckets for storing build logs and cache. Refer to the ",(0,l.jsx)(n.code,{children:"AWS specific"})," parameters on the ",(0,l.jsx)(n.a,{href:"./installation-configuration#storage-for-logs-and-cache",children:"Storage for Logs and Cache"})," page."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"$ git clone [https://github.com/devtron-labs/devtron.git](https://github.com/devtron-labs/devtron.git)\n$ cd devtron/charts/devtron\n$ helm dependency up\n$ #modify values in values.yaml\n$ helm install devtron . --create-namespace --namespace devtroncd \\\n--set installer.modules={cicd}\\\n--set configs.BLOB_STORAGE_PROVIDER=S3 \\\n--set configs.DEFAULT_CACHE_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CACHE_BUCKET_REGION=us-east-1 \\\n--set configs.DEFAULT_BUILD_LOGS_BUCKET=demo-s3-bucket \\\n--set configs.DEFAULT_CD_LOGS_BUCKET_REGION=us-east-1\n"})})]}),(0,l.jsxs)(o.A,{value:"Install with Azure Blob Storage",label:"Install with Azure Blob Storage",children:[(0,l.jsxs)(n.p,{children:["This installation will use Azure Blob Storage for storing build logs and cache.\nRefer to the ",(0,l.jsx)(n.code,{children:"Azure specific"})," parameters on the ",(0,l.jsx)(n.a,{href:"./installation-configuration#storage-for-logs-and-cache",children:"Storage for Logs and Cache"})," page."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"$ git clone [https://github.com/devtron-labs/devtron.git](https://github.com/devtron-labs/devtron.git)\n$ cd devtron/charts/devtron\n$ helm dependency up\n$ #modify values in values.yaml\n$ helm install devtron .  --create-namespace --namespace devtroncd \\\n--set installer.modules={cicd}\\\n--set secrets.AZURE_ACCOUNT_KEY=xxxxxxxxxx \\\n--set configs.BLOB_STORAGE_PROVIDER=AZURE \\\n--set configs.AZURE_ACCOUNT_NAME=test-account \\\n--set configs.AZURE_BLOB_CONTAINER_CI_LOG=ci-log-container \\\n--set configs.AZURE_BLOB_CONTAINER_CI_CACHE=ci-cache-container\n"})})]})]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Note: There is no option to upgrade to beta on stack manager UI as of now and you may always see upgrade available for latest stable version using which you'll be moved to latest stable version available."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"check-devtron-installation-status",children:"Check Devtron installation status"}),"\n",(0,l.jsx)(n.p,{children:"The install commands start Devtron-operator, which takes about 20 minutes to spin up all of the Devtron microservices one by one. You can use the following command to check the status of the installation:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl -n devtroncd get installers installer-devtron -o jsonpath='{.status.sync.status}'\n"})}),"\n",(0,l.jsx)(n.p,{children:"The command executes with one of the following output message, indicating the status of the installation:"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Status"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Downloaded"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Installer has downloaded all the manifests and installation is in progress."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"Applied"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Installer has successfully applied all the manifests and installation is complete."})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"check-the-installer-logs",children:"Check the installer logs"}),"\n",(0,l.jsx)(n.p,{children:"To check the installer logs run the following command:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl logs -f -l app=inception -n devtroncd\n"})}),"\n",(0,l.jsx)(n.h2,{id:"access-devtron-dashboard",children:"Access Devtron dashboard"}),"\n",(0,l.jsxs)(n.p,{children:["If you did not provide a ",(0,l.jsx)(n.strong,{children:"BASE_URL"})," during installation or have used the default installation, Devtron creates a load balancer for you on its own. Use the following command to get the dashboard URL."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl get svc -n devtroncd devtron-service -o jsonpath='{.status.loadBalancer.ingress}'\n"})}),"\n",(0,l.jsx)(n.p,{children:"You will get an output similar to the one shown below:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"[test2@server ~]$ kubectl get svc -n devtroncd devtron-service -o jsonpath='{.status.loadBalancer.ingress}'\n[map[hostname:aaff16e9760594a92afa0140dbfd99f7-305259315.us-east-1.elb.amazonaws.com]]\n"})}),"\n",(0,l.jsxs)(n.p,{children:["The hostname mentioned here ",(0,l.jsx)(n.code,{children:"aaff16e9760594a92afa0140dbfd99f7-305259315.us-east-1.elb.amazonaws.com"})," is the Loadbalancer URL where you can access the Devtron dashboard."]}),"\n",(0,l.jsx)(n.p,{children:"If you don't see any results or receive a message that says \"service doesn't exist,\" it means Devtron is still installing; please check back in 5 minutes."}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["Note: You can also do a ",(0,l.jsx)(n.code,{children:"CNAME"})," entry corresponding to your domain/subdomain to point to this Loadbalancer URL to access it at a custom domain."]}),"\n"]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"right"},children:"Host"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Points to"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"right"},children:"devtron.yourdomain.com"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"CNAME"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"aaff16e9760594a92afa0140dbfd99f7-305259315.us-east-1.elb.amazonaws.com"})]})})]}),"\n",(0,l.jsx)(n.h3,{id:"devtron-admin-credentials",children:"Devtron Admin credentials"}),"\n",(0,l.jsx)(n.p,{children:"When you install Devtron for the first time, it creates a default admin user and password (with unrestricted access to Devtron). You can use that credentials to log in as an administrator."}),"\n",(0,l.jsx)(n.p,{children:"After the initial login, we recommend you set up any SSO service like Google, GitHub, etc., and then add other users (including yourself). Subsequently, all the users can use the same SSO (let's say, GitHub) to log in to Devtron's dashboard."}),"\n",(0,l.jsx)(n.p,{children:"The section below will help you understand the process of getting the administrator credentials."}),"\n",(0,l.jsx)(n.h4,{id:"for-devtron-version-v060-and-higher",children:"For Devtron version v0.6.0 and higher"}),"\n",(0,l.jsxs)(n.p,{children:["Use username:",(0,l.jsx)(n.code,{children:"admin"})," and for password run command mentioned below."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl -n devtroncd get secret devtron-secret -o jsonpath='{.data.ADMIN_PASSWORD}' | base64 -d\n"})}),"\n",(0,l.jsx)(n.h4,{id:"for-devtron-version-less-than-v060",children:"For Devtron version less than v0.6.0"}),"\n",(0,l.jsxs)(n.p,{children:["Use username:",(0,l.jsx)(n.code,{children:"admin"})," and for password run command mentioned below."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl -n devtroncd get secret devtron-secret -o jsonpath='{.data.ACD_PASSWORD}' | base64 -d\n"})}),"\n",(0,l.jsx)(n.h2,{id:"cleaning-devtron-installer-helm3",children:"Cleaning Devtron Installer Helm3"}),"\n",(0,l.jsx)(n.p,{children:"Please make sure that you do not have anything inside namespaces devtroncd, devtron-cd, devtron-ci, and devtron-demo as the below steps will clean everything inside these namespaces:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"helm uninstall devtron --namespace devtroncd\nkubectl delete -n devtroncd -f https://raw.githubusercontent.com/devtron-labs/charts/main/charts/devtron/crds/crd-devtron.yaml\nkubectl delete -n argo -f https://raw.githubusercontent.com/devtron-labs/devtron/main/manifests/yamls/workflow.yaml\nkubectl delete ns devtroncd devtron-cd devtron-ci devtron-demo\n"})}),"\n",(0,l.jsx)(n.h3,{id:"cleanup",children:"Cleanup"}),"\n",(0,l.jsx)(n.p,{children:"Run the following commands to delete all the components installed by Devtron:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cd devtron-installation-script/\n\nkubectl delete -n devtroncd -f yamls/\nkubectl delete -n devtroncd -f charts/devtron/templates/devtron-installer.yaml\nkubectl delete -n devtroncd -f charts/devtron/templates/install.yaml\nkubectl delete -n devtroncd -f charts/devtron/crds\nkubectl delete ns devtroncd\n"})}),"\n",(0,l.jsx)(n.h3,{id:"faqs",children:"FAQs"}),"\n",(0,l.jsxs)(t,{children:[(0,l.jsx)("summary",{children:"1. How will I know when the installation is finished?"}),(0,l.jsx)(n.p,{children:"Run the following command to check the status of the installation:"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl -n devtroncd get installers installer-devtron -o jsonpath='{.status.sync.status}'\n"})}),(0,l.jsxs)(n.p,{children:["The above command will print ",(0,l.jsx)(n.code,{children:"Applied"})," once the installation process is complete. The installation process could take up to 30 minutes."]})]}),"\n",(0,l.jsxs)(t,{children:[(0,l.jsx)("summary",{children:"2. How do I track the progress of the installation?"}),(0,l.jsx)(n.p,{children:"Run the following command to check the logs of the Pod:"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pod=$(kubectl -n devtroncd get po -l app=inception -o jsonpath='{.items[0].metadata.name}')&& kubectl -n devtroncd logs -f $pod\n"})})]}),"\n",(0,l.jsxs)(t,{children:[(0,l.jsx)("summary",{children:"3. How can I restart the installation if the Devtron installer logs contain an error?"}),(0,l.jsx)(n.p,{children:"First run the below command to clean up components installed by Devtron installer:"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'cd devtron-installation-script/\nkubectl delete -n devtroncd -f yamls/\nkubectl -n devtroncd patch installer installer-devtron --type json -p \'[{"op": "remove", "path": "/status"}]\'\n'})}),(0,l.jsxs)(n.p,{children:["Next, ",(0,l.jsx)(n.a,{href:"/docs/setup/install/install-devtron-helm-3",children:"install Devtron using Helm3"})]})]}),"\n",(0,l.jsxs)(n.p,{children:["Still facing issues, please reach out to us on ",(0,l.jsx)(n.a,{href:"https://discord.gg/jsRG5qx2gp",children:"discord"}),"."]})]})}function v(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const l={},a=s.createContext(l);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);var s=t(4164);const l={tabItem:"tabItem_Ymn6"};var a=t(4848);function r({children:e,hidden:n,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(l.tabItem,t),hidden:n,children:e})}}}]);