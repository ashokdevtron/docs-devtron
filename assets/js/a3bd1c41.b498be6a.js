"use strict";(self.webpackChunkdocdevtron=self.webpackChunkdocdevtron||[]).push([[3160],{5697:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"user-guide/creating-application/workflow/README","title":"Workflow Editor","description":"After configuring the Build Configurations and Base Configurations, the next step is to create a workflow using the Workflow Editor.","source":"@site/docs/user-guide/creating-application/workflow/README.md","sourceDirName":"user-guide/creating-application/workflow","slug":"/user-guide/creating-application/workflow/","permalink":"/docs/user-guide/creating-application/workflow/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GitOps Configuration","permalink":"/docs/user-guide/creating-application/gitops-config"},"next":{"title":"CI Pipeline","permalink":"/docs/user-guide/creating-application/workflow/ci-pipeline"}}');var r=i(4848),s=i(8453);const l={},o="Workflow Editor",a={},c=[{value:"Create Workflow",id:"create-workflow",level:2},{value:"Types of CI Pipelines",id:"types-of-ci-pipelines",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"workflow-editor",children:"Workflow Editor"})}),"\n",(0,r.jsxs)(t.p,{children:["After configuring the ",(0,r.jsx)(t.strong,{children:"Build Configurations"})," and ",(0,r.jsx)(t.strong,{children:"Base Configurations"}),", the next step is to create a workflow using the Workflow Editor."]}),"\n",(0,r.jsxs)(t.p,{children:["In Devtron, a ",(0,r.jsx)(t.strong,{children:"Workflow"})," is a logical sequence of different stages(pipelines) used for continuous integration and continuous deployment of an application."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/arora1.gif",alt:"Figure 1: Workflow Editor"})}),"\n",(0,r.jsx)(t.h2,{id:"create-workflow",children:"Create Workflow"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.strong,{children:"Build and Deploy from Source Code"})," provides a simple way to create both CI and CD pipelines in one step. It is for users who want to set up a complete workflow quickly using minimal required information, such as the source repository branch and the target environment."]}),"\n",(0,r.jsx)(t.p,{children:"To create a quick workflow with both build and deployment pipelines, follow the steps below:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Click ",(0,r.jsx)(t.strong,{children:"New Workflow"})," in the workflow editor."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow/build-deploy-new-create-workflow.jpg",alt:"Figure 2: Selecting 'New Workflow'"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Select ",(0,r.jsx)(t.strong,{children:"Build and Deploy from Source Code"}),"; a window appears."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow/build-deploy-new-build-deploy-from-source-code.jpg",alt:"Figure 3: Selecting 'Build and Deploy from Source Code'"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Enter the required information in the following fields."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Field Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Required/Optional"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Source type"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Required"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Source type to trigger the CI. Available options: Branch Fixed, Branch Regex, Pull Request, Tag Creation"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Branch Name"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Required"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Branch that triggers the CI build"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Environment"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Required"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Select the environment where you want to deploy your application"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Namespace"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Required (Auto Filled)"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Automatically populated based on the selected environment"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow/build-deploy-new-cred.jpg",alt:"Figure 4: Entering Information"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Source Types"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Source Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Additional Requirements"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Branch Fixed"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Triggers a CI build whenever changes are pushed to a specified branch."}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Requires a predefined branch name."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Branch Regex"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Allows dynamic branch selection based on a regex pattern"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Requires a regex pattern to be defined. For example, if the user sets the Branch Regex as feature-*, then users can trigger the build from branches such as feature-1450, feature-hot-fix, etc.."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,r.jsx)(t.code,{children:"Pull Request"})," (PR)"]}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Triggers a CI build when a new pull request is created. You can also define filters (such as PR author, title, or branch) to control which pull requests trigger the pipeline."}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Requires configuring a webhook configuration for GitHub or Bitbucket."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Tag Creation"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Triggers a build whenever a new tag is created. You can also define filters (such as author and tag name) to control which tags trigger the pipeline."}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Requires webhook configuration for GitHub or Bitbucket."})]})]})]}),"\n",(0,r.jsxs)(t.ol,{start:"4",children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Click ",(0,r.jsx)(t.strong,{children:"Create Workflow"}),"; a workflow with both build and deployment pipelines will be created."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow/build-deploy-new-save-workflow.jpg",alt:"Figure 5: Clicking 'Create Workflow'"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["If you want to configure advanced configurations in the build pipeline, such as Custom image tag pattern, Vulnerability Scanning, etc., refer to the ",(0,r.jsx)(t.a,{href:"../workflow/ci-pipeline#advanced-options",children:"CI Pipeline"})," page to learn more."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["If you want to configure advanced configurations in the deployment pipeline, such as adding pre/post tasks, Custom image tag pattern, configure different deployment strategies, etc., refer to the ",(0,r.jsx)(t.a,{href:"/docs/user-guide/creating-application/workflow/ci-pipeline",children:"CD Pipeline"})," page to learn more."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["If you want, you can also add Pre/Post Tasks in both build and deployment pipelines. To do so, refer to the ",(0,r.jsx)(t.a,{href:"/docs/user-guide/creating-application/workflow/ci-build-pre-post-plugins",children:"Pre/Post tasks"})," page to learn more."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"types-of-ci-pipelines",children:"Types of CI Pipelines"}),"\n",(0,r.jsx)(t.p,{children:"Apart from configuring advanced options, you can create five types of CI pipelines depending on your use case."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"./ci-pipeline#1-build-from-source-code",children:"Build from Source Code"}),": Choose this option if you want Devtron to build the image of the source code."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"./ci-pipeline#2-linked-build-pipeline",children:"Linked Build Pipeline"}),": Choose this option if you want to use an image created by an existing CI pipeline in Devtron."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"./ci-pipeline#3-deploy-image-from-external-service",children:"Deploy Image from External Service"}),": Choose this if you want to build your image outside Devtron; it will receive a Docker image from an external source via the incoming webhook."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Sync with Environment ",(0,r.jsx)(t.a,{href:"https://devtron.ai/pricing",children:(0,r.jsx)(t.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/elements/EnterpriseTag.svg",alt:""})})]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Create a Job"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow/workflow-ci.jpg",alt:"Figure 6: Selecting an Image Source"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>o});var n=i(6540);const r={},s=n.createContext(r);function l(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);