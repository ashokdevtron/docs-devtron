"use strict";(self.webpackChunkdocdevtron=self.webpackChunkdocdevtron||[]).push([[8901],{8453:(n,e,s)=>{s.d(e,{R:()=>i,x:()=>a});var r=s(6540);const t={},o=r.createContext(t);function i(n){const e=r.useContext(o);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),r.createElement(o.Provider,{value:e},n.children)}},8893:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"setup/install/ingress-setup","title":"Ingress Setup","description":"Introduction","source":"@site/docs/setup/install/ingress-setup.md","sourceDirName":"setup/install","slug":"/setup/install/ingress-setup","permalink":"/docs/setup/install/ingress-setup","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Override Default Configurations of Devtron Installation","permalink":"/docs/setup/install/override-default-devtron-installation-configs"},"next":{"title":"Global Configurations","permalink":"/docs/user-guide/global-configurations/"}}');var t=s(4848),o=s(8453);const i={},a="Ingress Setup",l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Enabling Ingress during Devtron Installation",id:"enabling-ingress-during-devtron-installation",level:2},{value:"Using set flag",id:"using-set-flag",level:3},{value:"Only Basic Configuration",id:"only-basic-configuration",level:4},{value:"Configuration Including Labels",id:"configuration-including-labels",level:4},{value:"Configuration Including Annotations",id:"configuration-including-annotations",level:4},{value:"Configuration Including TLS Settings",id:"configuration-including-tls-settings",level:4},{value:"Comprehensive Configuration",id:"comprehensive-configuration",level:4},{value:"Using ingress-values.yaml",id:"using-ingress-valuesyaml",level:3},{value:"Configuring Ingress after Devtron Installation",id:"configuring-ingress-after-devtron-installation",level:2},{value:"Enable HTTPS For Devtron",id:"enable-https-for-devtron",level:2},{value:"1. Nginx Ingress Controller",id:"1-nginx-ingress-controller",level:3},{value:"2. AWS Application Load Balancer (AWS ALB)",id:"2-aws-application-load-balancer-aws-alb",level:3},{value:"3. Azure Application Gateway",id:"3-azure-application-gateway",level:3}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"ingress-setup",children:"Ingress Setup"})}),"\n",(0,t.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(e.p,{children:["If you wish to use ",(0,t.jsx)(e.a,{href:"https://kubernetes.io/docs/concepts/services-networking/ingress/",children:"Ingress"})," as a means to access the Devtron services available in your cluster, you can configure it either during the installation or after the installation of Devtron."]}),"\n",(0,t.jsx)(e.p,{children:"Refer the section relevant to you:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#enabling-ingress-during-devtron-installation",children:"During Devtron Installation"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#configuring-ingress-after-devtron-installation",children:"After Devtron Installation"})}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["If you have successfully configured Ingress, refer ",(0,t.jsx)(e.a,{href:"#enable-https-for-devtron",children:"Post Ingress Setup"}),"."]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"enabling-ingress-during-devtron-installation",children:"Enabling Ingress during Devtron Installation"}),"\n",(0,t.jsxs)(e.p,{children:["If you are installing Devtron, you can enable Ingress either via ",(0,t.jsx)(e.a,{href:"#using-set-flag",children:"set flag"})," or by using ",(0,t.jsx)(e.a,{href:"#using-ingress-valuesyaml",children:"ingress-values.yaml"})," to specify the desired Ingress settings."]}),"\n",(0,t.jsx)(e.h3,{id:"using-set-flag",children:"Using set flag"}),"\n",(0,t.jsxs)(e.p,{children:["You can use the ",(0,t.jsx)(e.code,{children:"--set"})," flag to specify the desired Ingress settings."]}),"\n",(0,t.jsx)(e.p,{children:"Here, we have added 5 configurations you can perform depending on your requirements:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#only-basic-configuration",children:"Only Basic Configuration"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#configuration-including-labels",children:"Configuration Including Labels"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#configuration-including-annotations",children:"Configuration Including Annotations"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#configuration-including-tls-settings",children:"Configuration Including TLS Settings"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#comprehensive-configuration",children:"Comprehensive Configuration"})}),"\n"]}),"\n",(0,t.jsx)(e.h4,{id:"only-basic-configuration",children:"Only Basic Configuration"}),"\n",(0,t.jsx)(e.p,{children:"To enable Ingress and set basic parameters, use the following command:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"helm install devtron devtron/devtron-operator -n devtroncd \\\n  --set components.devtron.ingress.enabled=true \\\n  --set components.devtron.ingress.className=nginx \\\n  --set components.devtron.ingress.host=devtron.example.com\n"})}),"\n",(0,t.jsx)(e.h4,{id:"configuration-including-labels",children:"Configuration Including Labels"}),"\n",(0,t.jsx)(e.p,{children:"To add labels to the Ingress resource, use the following command:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"helm install devtron devtron/devtron-operator -n devtroncd \\\n  --set components.devtron.ingress.enabled=true \\\n  --set components.devtron.ingress.className=nginx \\\n  --set components.devtron.ingress.host=devtron.example.com \\\n  --set components.devtron.ingress.labels.env=production\n"})}),"\n",(0,t.jsx)(e.h4,{id:"configuration-including-annotations",children:"Configuration Including Annotations"}),"\n",(0,t.jsx)(e.p,{children:"To add annotations to the Ingress resource, use the following command:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'helm install devtron devtron/devtron-operator -n devtroncd \\\n  --set components.devtron.ingress.enabled=true \\\n  --set components.devtron.ingress.className=nginx \\\n  --set components.devtron.ingress.host=devtron.example.com \\\n  --set components.devtron.ingress.annotations."kubernetes\\.io/ingress\\.class"=nginx \\\n  --set components.devtron.ingress.annotations."nginx\\.ingress\\.kubernetes\\.io\\/app-root"="/dashboard"\n'})}),"\n",(0,t.jsx)(e.h4,{id:"configuration-including-tls-settings",children:"Configuration Including TLS Settings"}),"\n",(0,t.jsxs)(e.p,{children:["To configure TLS settings, including ",(0,t.jsx)(e.code,{children:"secretName"})," and ",(0,t.jsx)(e.code,{children:"hosts"}),", use the following command:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"helm install devtron devtron/devtron-operator -n devtroncd \\\n  --set components.devtron.ingress.enabled=true \\\n  --set components.devtron.ingress.className=nginx \\\n  --set components.devtron.ingress.host=devtron.example.com \\\n  --set components.devtron.ingress.tls[0].secretName=devtron-tls \\\n  --set components.devtron.ingress.tls[0].hosts[0]=devtron.example.com\n"})}),"\n",(0,t.jsx)(e.h4,{id:"comprehensive-configuration",children:"Comprehensive Configuration"}),"\n",(0,t.jsx)(e.p,{children:"To include all the above settings in a single command, use:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'helm install devtron devtron/devtron-operator -n devtroncd \\\n  --set components.devtron.ingress.enabled=true \\\n  --set components.devtron.ingress.className=nginx \\\n  --set components.devtron.ingress.host=devtron.example.com \\\n  --set components.devtron.ingress.annotations."kubernetes\\.io/ingress\\.class"=nginx \\\n  --set components.devtron.ingress.annotations."nginx\\.ingress\\.kubernetes\\.io\\/app-root"="/dashboard" \\\n  --set components.devtron.ingress.labels.env=production \\\n  --set components.devtron.ingress.pathType=ImplementationSpecific \\\n  --set components.devtron.ingress.tls[0].secretName=devtron-tls \\\n  --set components.devtron.ingress.tls[0].hosts[0]=devtron.example.com\n'})}),"\n",(0,t.jsx)(e.h3,{id:"using-ingress-valuesyaml",children:"Using ingress-values.yaml"}),"\n",(0,t.jsxs)(e.p,{children:["As an alternative to the ",(0,t.jsx)(e.a,{href:"#using-set-flag",children:"set flag"})," method, you can enable Ingress using ",(0,t.jsx)(e.code,{children:"ingress-values.yaml"})," instead."]}),"\n",(0,t.jsxs)(e.p,{children:["Create an ",(0,t.jsx)(e.code,{children:"ingress-values.yaml"})," file. You may refer the below format for an advanced ingress configuration which includes labels, annotations, secrets, and many more."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yml",children:"components:\n  devtron:\n    ingress:\n      enabled: true\n      className: nginx\n      labels: {}\n        # env: production\n      annotations: {}\n        # nginx.ingress.kubernetes.io/app-root: /dashboard\n      pathType: ImplementationSpecific\n      host: devtron.example.com\n      tls: []\n    #    - secretName: devtron-info-tls\n    #      hosts:\n    #        - devtron.example.com\n"})}),"\n",(0,t.jsxs)(e.p,{children:["Once you have the ",(0,t.jsx)(e.code,{children:"ingress-values.yaml"})," file ready, run the following command:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"helm install devtron devtron/devtron-operator -n devtroncd  --reuse-values  -f ingress-values.yaml\n"})}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"configuring-ingress-after-devtron-installation",children:"Configuring Ingress after Devtron Installation"}),"\n",(0,t.jsxs)(e.p,{children:["After Devtron is installed, Devtron is accessible through ",(0,t.jsx)(e.code,{children:"devtron-service"}),". If you wish to access Devtron through ingress, you'll need to modify this service to use a ClusterIP instead of a LoadBalancer."]}),"\n",(0,t.jsxs)(e.p,{children:["You can do this using the ",(0,t.jsx)(e.code,{children:"kubectl patch"})," command:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'kubectl patch -n devtroncd svc devtron-service -p \'{"spec": {"ports": [{"port": 80,"targetPort": "devtron","protocol": "TCP","name": "devtron"}],"type": "ClusterIP","selector": {"app": "devtron"}}}\'\n'})}),"\n",(0,t.jsxs)(e.p,{children:["Next, create ingress to access Devtron by applying the ",(0,t.jsx)(e.code,{children:"devtron-ingress.yaml"})," file. The file is also available on this ",(0,t.jsx)(e.a,{href:"https://github.com/devtron-labs/devtron/blob/main/manifests/yamls/devtron-ingress.yaml",children:"link"}),". You can access Devtron from any host after applying this yaml."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yml",children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations: \n    nginx.ingress.kubernetes.io/app-root: /dashboard\n  labels:\n    app: devtron\n    release: devtron\n  name: devtron-ingress\n  namespace: devtroncd\nspec:\n  ingressClassName: nginx\n  rules:\n  - http:\n      paths:\n      - backend:\n          service:\n            name: devtron-service\n            port:\n              number: 80\n        path: /orchestrator\n        pathType: ImplementationSpecific \n      - backend:\n          service:\n            name: devtron-service\n            port:\n              number: 80\n        path: /dashboard\n        pathType: ImplementationSpecific\n      - backend:\n          service:\n            name: devtron-service\n            port:\n              number: 80\n        path: /grafana\n        pathType: ImplementationSpecific  \n"})}),"\n",(0,t.jsxs)(e.p,{children:["For k8s versions < 1.19, ",(0,t.jsx)(e.a,{href:"https://github.com/devtron-labs/devtron/blob/main/manifests/yamls/devtron-ingress-legacy.yaml",children:"apply this yaml"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yml",children:"apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  annotations: \n    nginx.ingress.kubernetes.io/app-root: /dashboard\n  labels:\n    app: devtron\n    release: devtron\n  name: devtron-ingress\n  namespace: devtroncd\nspec:\n  rules:\n  - http:\n      paths:\n      - backend:\n          serviceName: devtron-service\n          servicePort: 80\n        path: /orchestrator\n      - backend:\n          serviceName: devtron-service\n          servicePort: 80\n        path: /dashboard\n        pathType: ImplementationSpecific  \n"})}),"\n",(0,t.jsx)(e.p,{children:"Optionally, you also can access Devtron through a specific host by running the following YAML file:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yml",children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations: \n    nginx.ingress.kubernetes.io/app-root: /dashboard\n  labels:\n    app: devtron\n    release: devtron\n  name: devtron-ingress\n  namespace: devtroncd\nspec:\n  ingressClassName: nginx\n  rules:\n    - host: devtron.example.com\n      http:\n        paths:\n          - backend:\n              service:\n                name: devtron-service\n                port:\n                  number: 80\n            path: /orchestrator\n            pathType: ImplementationSpecific\n          - backend:\n              service:\n                name: devtron-service\n                port:\n                  number: 80\n            path: /dashboard\n            pathType: ImplementationSpecific\n          - backend:\n              service:\n                name: devtron-service\n                port:\n                  number: 80\n            path: /grafana\n            pathType: ImplementationSpecific\n"})}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"enable-https-for-devtron",children:"Enable HTTPS For Devtron"}),"\n",(0,t.jsxs)(e.p,{children:["Once Ingress setup for Devtron is done and you want to run Devtron over ",(0,t.jsx)(e.code,{children:"https"}),", you need to add different annotations for different ingress controllers and load balancers."]}),"\n",(0,t.jsx)(e.h3,{id:"1-nginx-ingress-controller",children:"1. Nginx Ingress Controller"}),"\n",(0,t.jsxs)(e.p,{children:["In case of ",(0,t.jsx)(e.code,{children:"nginx ingress controller"}),", add the following annotations under ",(0,t.jsx)(e.code,{children:"service.annotations"})," under nginx ingress controller to run devtron over ",(0,t.jsx)(e.code,{children:"https"}),"."]}),"\n",(0,t.jsx)(e.p,{children:"(i) Amazon Web Services (AWS)"}),"\n",(0,t.jsxs)(e.p,{children:["If you are using AWS cloud, add the following annotations under ",(0,t.jsx)(e.code,{children:"service.annotations"})," under nginx ingress controller."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"\n    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"\n    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"\n    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "<acm-arn-here>"\n'})}),"\n",(0,t.jsx)(e.p,{children:"(ii) Digital Ocean"}),"\n",(0,t.jsxs)(e.p,{children:["If you are using Digital Ocean cloud, add the following annotations under ",(0,t.jsx)(e.code,{children:"service.annotations"})," under nginx ingress controller."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'annotations:\n  service.beta.kubernetes.io/do-loadbalancer-protocol: "http"\n  service.beta.kubernetes.io/do-loadbalancer-tls-ports: "443"\n  service.beta.kubernetes.io/do-loadbalancer-certificate-id: "<your-certificate-id>"\n  service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: "true"\n'})}),"\n",(0,t.jsx)(e.h3,{id:"2-aws-application-load-balancer-aws-alb",children:"2. AWS Application Load Balancer (AWS ALB)"}),"\n",(0,t.jsxs)(e.p,{children:["In case of AWS application load balancer, add following annotations under ",(0,t.jsx)(e.code,{children:"ingress.annotations"})," to run devtron over ",(0,t.jsx)(e.code,{children:"https"}),"."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'  annotations:\n    kubernetes.io/ingress.class: alb\n    alb.ingress.kubernetes.io/listen-ports: \'[{"HTTP": 80}, {"HTTPS": 443}]\'\n    alb.ingress.kubernetes.io/certificate-arn: "<acm-arn-here>"\n'})}),"\n",(0,t.jsx)(e.h3,{id:"3-azure-application-gateway",children:"3. Azure Application Gateway"}),"\n",(0,t.jsxs)(e.p,{children:["In case of AWS application load balancer, the following annotations need to be added under ",(0,t.jsx)(e.code,{children:"ingress.annotations"})," to run devtron over ",(0,t.jsx)(e.code,{children:"https"}),"."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:' annotations:\n  kubernetes.io/ingress.class: "azure/application-gateway"\n  appgw.ingress.kubernetes.io/backend-protocol: "http"\n  appgw.ingress.kubernetes.io/ssl-redirect: "true"\n  appgw.ingress.kubernetes.io/appgw-ssl-certificate: "<name-of-appgw-installed-certificate>"\n'})}),"\n",(0,t.jsx)(e.p,{children:"For an Ingress resource to be observed by AGIC (Application Gateway Ingress Controller) must be annotated with kubernetes.io/ingress.class: azure/application-gateway. Only then AGIC will work with the Ingress resource in question."}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"Note: Make sure NOT to use port 80 with HTTPS and port 443 with HTTP on the Pods."}),"\n"]})]})}function g(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}}}]);