"use strict";(self.webpackChunkdocdevtron=self.webpackChunkdocdevtron||[]).push([[6481],{2409:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"user-guide/use-cases/connect-springboot-with-mysql-database","title":"Connect SpringBoot with Mysql Database","description":"Introduction","source":"@site/docs/user-guide/use-cases/connect-springboot-with-mysql-database.md","sourceDirName":"user-guide/use-cases","slug":"/user-guide/use-cases/connect-springboot-with-mysql-database","permalink":"/docs/user-guide/use-cases/connect-springboot-with-mysql-database","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Devtron Generic Helm Chart To Run Cron Job Or One Time Job","permalink":"/docs/user-guide/use-cases/devtron-generic-helm-chart-to-run-cron-job-or-one-time-job"},"next":{"title":"Connect Expressjs With Mongodb Database","permalink":"/docs/user-guide/use-cases/connect-expressjs-with-mongodb-database"}}');var i=t(4848),r=t(8453);const o={},a="Connect SpringBoot with Mysql Database",l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"<strong>1. Deploy a mysql Helm Chart</strong>",id:"1-deploy-a-mysql-helm-chart",level:3},{value:"<strong>2. Fork the Git Repository</strong>",id:"2-fork-the-git-repository",level:3},{value:"<em>*Configure application.properties</em>",id:"configure-applicationproperties",level:4},{value:"<em>Configure the Dockerfile</em>",id:"configure-the-dockerfile",level:4},{value:"<strong>3. Create Application on Devtron</strong>",id:"3-create-application-on-devtron",level:3},{value:"<em>*Git Repository</em>",id:"git-repository",level:4},{value:"<em>*Docker configuration</em>",id:"docker-configuration",level:4},{value:"<em>**_Configure Deployment Template</em>*_",id:"_configure-deployment-template_",level:4},{value:"<em>*Set up the CI/CD Pipelines</em>",id:"set-up-the-cicd-pipelines",level:4},{value:"<em>*Trigger Pipelines</em>",id:"trigger-pipelines",level:4},{value:"<strong>4. Final Step</strong>",id:"4-final-step",level:3},{value:"<em>*Test Rest API</em>",id:"test-rest-api",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"connect-springboot-with-mysql-database",children:"Connect SpringBoot with Mysql Database"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["This document will help you to deploy a sample Spring Boot Application, using ",(0,i.jsx)(n.strong,{children:"mysql Helm Chart"})]}),"\n",(0,i.jsx)(n.h3,{id:"1-deploy-a-mysql-helm-chart",children:(0,i.jsx)(n.strong,{children:"1. Deploy a mysql Helm Chart"})}),"\n",(0,i.jsxs)(n.p,{children:["To deploy mysql Helm Chart, you can refer to our documentation on ",(0,i.jsx)(n.a,{href:"/docs/user-guide/deploy-chart/deployment-of-charts#example",children:"Deploy mysql Helm Chart"})]}),"\n",(0,i.jsx)(n.h3,{id:"2-fork-the-git-repository",children:(0,i.jsx)(n.strong,{children:"2. Fork the Git Repository"})}),"\n",(0,i.jsxs)(n.p,{children:["For this example, we are using the following ",(0,i.jsx)(n.a,{href:"https://github.com/devtron-labs/springboot",children:"GitHub Repo"}),", you can clone this repository and make following changes in the files."]}),"\n",(0,i.jsx)(n.h4,{id:"configure-applicationproperties",children:(0,i.jsx)(n.em,{children:"*Configure application.properties"})}),"\n",(0,i.jsx)(n.p,{children:"Set the database configuration in this file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"spring.datasource.url=jdbc:mysql://<service-name>/<mysql database-name>\nspring.jpa.hibernate.ddl-auto=update\nspring.jpa.show-sql=true\nspring.datasource.username=<mysql-user>\nspring.datasource.password=<mysql-password>\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect\nspring.jpa.open-in-view=true\n"})}),"\n",(0,i.jsx)(n.h4,{id:"configure-the-dockerfile",children:(0,i.jsx)(n.em,{children:"Configure the Dockerfile"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# syntax=docker/dockerfile:experimental\nFROM maven:3.5-jdk-8-alpine as build\nWORKDIR /workspace/app\n\nCOPY pom.xml .\n\nRUN mvn -B -e -C -T 1C org.apache.maven.plugins:maven-dependency-plugin:3.0.2:go-offline\n\nCOPY . .\nRUN mvn clean package -Dmaven.test.skip=true\n\n\nFROM openjdk:8-jdk-alpine\nRUN addgroup -S demo && adduser -S demo -G demo\nVOLUME /tmp\nUSER demo\nARG DEPENDENCY=/workspace/app/target/dependency\nCOPY --from=build /workspace/app/target/docker-demo-0.0.1-SNAPSHOT.jar app.jar\nENTRYPOINT ["java","-jar", "app.jar"]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-create-application-on-devtron",children:(0,i.jsx)(n.strong,{children:"3. Create Application on Devtron"})}),"\n",(0,i.jsxs)(n.p,{children:["To learn how to create an application on Devtron, refer to our documentation on ",(0,i.jsx)(n.a,{href:"../creating-application/",children:"Creating Application"})]}),"\n",(0,i.jsx)(n.h4,{id:"git-repository",children:(0,i.jsx)(n.em,{children:"*Git Repository"})}),"\n",(0,i.jsx)(n.p,{children:"In this example, we are using the url of the forked Git repository."}),"\n",(0,i.jsx)(n.h4,{id:"docker-configuration",children:(0,i.jsx)(n.em,{children:"*Docker configuration"})}),"\n",(0,i.jsx)(n.p,{children:"Give, the path of the Dockerfile."}),"\n",(0,i.jsxs)(n.h4,{id:"_configure-deployment-template_",children:[(0,i.jsx)(n.em,{children:"**_Configure Deployment Template"}),"*_"]}),"\n",(0,i.jsxs)(n.p,{children:["Enable ",(0,i.jsx)(n.code,{children:"Ingress"}),", and give the path on which you want to host the application."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/use-cases/connect-expressjs-with-mongodb-database/three.jpg",alt:""})}),"\n",(0,i.jsx)(n.h4,{id:"set-up-the-cicd-pipelines",children:(0,i.jsx)(n.em,{children:"*Set up the CI/CD Pipelines"})}),"\n",(0,i.jsx)(n.p,{children:"Set up the CI/CD pipelines. You can set them to trigger automatically or manually."}),"\n",(0,i.jsx)(n.h4,{id:"trigger-pipelines",children:(0,i.jsx)(n.em,{children:"*Trigger Pipelines"})}),"\n",(0,i.jsxs)(n.p,{children:["Trigger the CI Pipeline, build should be ",(0,i.jsx)(n.strong,{children:"Successful"}),". Then trigger the CD Pipeline, deployment pipeline will be initiated, after some time the status should be ",(0,i.jsx)(n.strong,{children:"Healthy"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"4-final-step",children:(0,i.jsx)(n.strong,{children:"4. Final Step"})}),"\n",(0,i.jsx)(n.h4,{id:"test-rest-api",children:(0,i.jsx)(n.em,{children:"*Test Rest API"})}),"\n",(0,i.jsxs)(n.p,{children:["It exposes 3 REST endpoints for it's users to create, to ",(0,i.jsx)(n.em,{children:"view specific"})," student record and ",(0,i.jsx)(n.em,{children:"view all"})," student records."]}),"\n",(0,i.jsxs)(n.p,{children:["To test Rest API, you can use ",(0,i.jsx)(n.em,{children:"curl"})," command line tool"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Create a new Student Record"})})}),"\n",(0,i.jsxs)(n.p,{children:["Create a new POST request to create a new Transaction. Once the transaction is successfully created, you will get the ",(0,i.jsx)(n.em,{children:"student id"})," as a response."]}),"\n",(0,i.jsx)(n.p,{children:"Curl Request is as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'sudo curl -d \'{"name": "Anushka", "marks": 98}\' -H "Content-Type: application/json" -X POST http://<hostname>/<path-name>/create\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"View All Student's Data"})})}),"\n",(0,i.jsx)(n.p,{children:"To view all student records, GET Request is:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"path"})})," will be the one that you have given in Step 3 while configuring the Deployment Template."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"http://<hostname>/<path>/viewAll"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/use-cases/connect-expressjs-with-mongodb-database/use-cases-springboot-view-student-data.jpg",alt:""})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"View student's data By student ID"})})}),"\n",(0,i.jsx)(n.p,{children:"To view student data by student id, GET Request is:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"http://<hostname>/<path>/view/<id>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"path"})})," will be the one that you have given in Step 3 while configuring the Deployment Template."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/use-cases/connect-expressjs-with-mongodb-database/use-case-expressjs-view-student-data-with-id.jpg",alt:""})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);