"use strict";(self.webpackChunkdocdevtron=self.webpackChunkdocdevtron||[]).push([[2736],{254:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"user-guide/plugins/copy-container-image","title":"Copy Container Image","description":"Introduction","source":"@site/docs/user-guide/plugins/copy-container-image.md","sourceDirName":"user-guide/plugins","slug":"/user-guide/plugins/copy-container-image","permalink":"/docs-devtron/docs/user-guide/plugins/copy-container-image","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Container Image Exporter","permalink":"/docs-devtron/docs/user-guide/plugins/container-image-exporter"},"next":{"title":"Cosign","permalink":"/docs-devtron/docs/user-guide/plugins/cosign"}}');var t=i(4848),o=i(8453);const r={},a="Copy Container Image",c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Steps to Use",id:"steps-to-use",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"copy-container-image",children:"Copy Container Image"})}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"Building container images in CI often results in a growing number of images, not all of which are production-ready. Therefore, it's a best practice to maintain a separate repository exclusively for storing production-builds. However, this would involve copying the container image (production-ready) from your existing repository to the production repository."}),"\n",(0,t.jsxs)(n.p,{children:["This plugin helps you copy a container image to a desired container ",(0,t.jsx)(n.a,{href:"../../reference/glossary#repo",children:"repository"}),". The pushing of image can be between repositories of the same container ",(0,t.jsx)(n.a,{href:"../../reference/glossary#containeroci-registry",children:"registry"})," or between repositories of different container registry. One of the major usecases this plugin serves is multi-cloud deployments."]}),"\n",(0,t.jsxs)(n.p,{children:["The plugin can be used at post CI, pre-CD, and post-CD. Moreover, you can also ",(0,t.jsx)(n.a,{href:"../creating-application/workflow/cd-pipeline#custom-image-tag-pattern",children:"customize the image tag pattern"})," for the copied image."]}),"\n",(0,t.jsx)(n.h2,{id:"steps-to-use",children:"Steps to Use"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Go to ",(0,t.jsx)(n.strong,{children:"App Configuration"})," tab of your application."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Select ",(0,t.jsx)(n.strong,{children:"Workflow Editor"})," and click your deployment pipeline."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow-cd-pipeline/cd-pipeline.jpg",alt:""})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["In this example, we will be adding the plugin in pre-CD stage; therefore, go to ",(0,t.jsx)(n.strong,{children:"Pre-Deployment stage"})," tab of your deployment pipeline and click ",(0,t.jsx)(n.strong,{children:"Add task"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow-cd-pipeline/pre-deployment-tab.jpg",alt:""})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["From the list of plugins, choose ",(0,t.jsx)(n.strong,{children:"Copy container image"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow-cd-pipeline/copy-container-image.jpg",alt:""})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Add the image destination in the field given for ",(0,t.jsx)(n.strong,{children:"DESTINATION_INFO"})," variable. The format is ",(0,t.jsx)(n.code,{children:"registry-name | username/repository-name"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow-cd-pipeline/image-destination.jpg",alt:""})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"registry-name"})," is the name you gave to your container registry while adding it in ",(0,t.jsx)(n.a,{href:"../global-configurations/container-registries#add-container-registry",children:"Global Configuration \u2192 OCI/Container Registry"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"user-name"})," is the your account name registered with you container registry, e.g., DockerHub."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"repository-name"})," is the name of the repository within your container registry that hosts the container images of your application."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Click ",(0,t.jsx)(n.strong,{children:"Update Pipeline"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Go to the ",(0,t.jsx)(n.strong,{children:"Build & Deploy"})," tab of your application and click ",(0,t.jsx)(n.strong,{children:"Select Image"})," in the pre-deployment stage."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow-cd-pipeline/select-image-for-cd.jpg",alt:""})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Choose a CI image that you wish to copy to the destination and click ",(0,t.jsx)(n.strong,{children:"Trigger Stage"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow-cd-pipeline/trigger-pre-cd.jpg",alt:""})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The copying process will initiate, and once it is successful, the ",(0,t.jsx)(n.a,{href:"../creating-application/workflow/cd-pipeline#custom-image-tag-pattern",children:"tag for the copied image"})," would reflect at all relevant screens:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Destination Repository"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow-cd-pipeline/docker-destination-image.jpg",alt:""})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"CD Pipeline (Image Selection)"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow-cd-pipeline/cd-image.jpg",alt:""})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://devtron-public-asset.s3.us-east-2.amazonaws.com/images/creating-application/workflow-cd-pipeline/prod-image.jpg",alt:""})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["You can also filter out specific images (of target repository) from deployment. Refer ",(0,t.jsx)(n.a,{href:"/docs-devtron/docs/user-guide/global-configurations/filter-condition",children:"Filter Condition"})," to know the process."]})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);