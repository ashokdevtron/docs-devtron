"use strict";(self.webpackChunkdocdevtron=self.webpackChunkdocdevtron||[]).push([[7489],{1752:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"user-guide/plugins/golang-migrate","title":"GoLang-migrate","description":"Migrate reads migrations from sources file and applies them in correct order to a database.","source":"@site/docs/user-guide/plugins/golang-migrate.md","sourceDirName":"user-guide/plugins","slug":"/user-guide/plugins/golang-migrate","permalink":"/docs/user-guide/plugins/golang-migrate","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GKE Provisioner","permalink":"/docs/user-guide/plugins/gke-provisioner"},"next":{"title":"Jenkins","permalink":"/docs/user-guide/plugins/jenkins"}}');var s=r(4848),i=r(8453);const d={},l="GoLang-migrate",o={},a=[{value:"Notes",id:"notes",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"golang-migrate",children:"GoLang-migrate"})}),"\n",(0,s.jsx)(t.p,{children:"Migrate reads migrations from sources file and applies them in correct order to a database."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Prerequisite"}),": Make sure you have SQL files in format used by the golang-migrate tool."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"official-documentation"}),": ",(0,s.jsx)(t.a,{href:"https://github.com/golang-migrate/migrate",children:"https://github.com/golang-migrate/migrate"}),"\n",(0,s.jsx)(t.strong,{children:"postgres-example"}),": ",(0,s.jsx)(t.a,{href:"https://github.com/golang-migrate/migrate/tree/master/database/postgres",children:"https://github.com/golang-migrate/migrate/tree/master/database/postgres"})]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["On the ",(0,s.jsx)(t.strong,{children:"Edit build pipeline"})," page, select the ",(0,s.jsx)(t.strong,{children:"Pre-Build Stage"})," (or Post-Build Stage). or"]}),"\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.strong,{children:"+ Add task"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Select ",(0,s.jsx)(t.strong,{children:"GoLang-migrate"})," from ",(0,s.jsx)(t.strong,{children:"PRESET PLUGINS"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Enter a relevant name in the ",(0,s.jsx)(t.code,{children:"Task name"})," field. It is a mandatory field."]}),"\n",(0,s.jsxs)(t.li,{children:["Enter a descriptive message for the task in the ",(0,s.jsx)(t.code,{children:"Description"})," field. It is an optional field."]}),"\n",(0,s.jsxs)(t.li,{children:["Provide a value for the input variable.",(0,s.jsx)("br",{})," Note: The value may be any of the values from the previous build stages, a global variable, or a custom value."]}),"\n"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Variable"}),(0,s.jsx)(t.th,{children:"Format"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DB_TYPE"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Currently this plugin support postgres,mongodb,mongodb+srv,mysql,sqlserver."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DB_HOST"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The hostname, service endpoint or IP address of the database server."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DB_PORT"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The port number on which the database server is listening."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DB_NAME"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The name of the specific database instance you want to connect to."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DB_USER"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The username required to authenticate to the database."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DB_PASSWORD"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The password required to authenticate to the database."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SCRIPT_LOCATION"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Location of SQL files that need to be run on desired database."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"MIGRATE_IMAGE"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsxs)(t.td,{children:["Docker image of golang-migrate default",":migrate","/migrate."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"MIGRATE_TO_VERSION"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"migrate to which version of sql script need to be run on desired database(default: 0 is for all files in directory)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"PARAM"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"extra params that runs with db queries."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"POST_COMMAND"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"post commands that runs at the end of script."})]})]})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Trigger/Skip Condition"})," refers to a conditional statement to execute or skip the task. You can select either:",(0,s.jsxs)("ul",{children:[(0,s.jsxs)("li",{children:[(0,s.jsx)(t.code,{children:"Set trigger conditions"})," or"]}),(0,s.jsx)("li",{children:(0,s.jsx)(t.code,{children:"Set skip conditions"})})]})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Click ",(0,s.jsx)(t.strong,{children:"Update Pipeline"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Use ",(0,s.jsx)(t.code,{children:"in-cluster/ Execute tasks in application environment"})," feature in ",(0,s.jsx)(t.code,{children:"pre-deploy"})," or ",(0,s.jsx)(t.code,{children:"post-deploy"}),", in case when the database service is not reachable or accessible from devtron cluster."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["In case the ",(0,s.jsx)(t.code,{children:"DB_TYPE"})," is not supported for your database, then use ",(0,s.jsx)(t.code,{children:"POST_COMMAND"})," as"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'POST_COMMAND: \n     docker run -v $PWD:$PWD $MIGRATE_IMAGE   -path $PWD/$SCRIPT_LOCATION -database <myDB-connection-string>" goto $MIGRATE_TO_VERSION;\n'})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["use ",(0,s.jsx)(t.code,{children:"DB_PASSWORD"})," with ",(0,s.jsx)(t.code,{children:"scope-variable"})," feature for more security."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>l});var n=r(6540);const s={},i=n.createContext(s);function d(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);